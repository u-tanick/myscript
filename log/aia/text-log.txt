AI Code Agents祭り - 2025 Winter


Scan to access live translation

え？
大変お待たせいたしました。お時間になりましたので、始めさせていただきます。
よろしくお願いいたします。
えっとですね、あの、先にですね。
え？翻訳？えっと、AI翻訳サービスのご案内をさせていただければと思います。
え、本イベントはですね、えっと、日本語と英語の両セッションが行われます。
え？全てのセッションでリアルタイムAI通訳をご利用いただけます。
え、スマートフォンまたはパソコンでスクリーンに表示されております。
え？QRコードをスキャンしていただくか、リンクダブドットshスラッシュ八号にアクセスして、通訳サービスをご利用ください。
セブンのために。
これらのイベントセッションは日本語と英語の両方で行われますが、全てのセッションでリアルタイムAI通訳が利用可能です。
画面に表示されているQRコードをスマートフォンでスキャンするか、デスクトップでlink.sh/8にアクセスして通訳サービスをご利用ください。
あの、こんな感じでですね。英語と日本語が入り混じる会になるかと思いますので、ぜひ通訳サービスをご利用ください。
はい。ということで。
皆様、改めまして、AIコードエージェント祭りへようこそ。
本日、司会を務めさせていただきます。
弊社サイバーエージェントでデブレル推進を担当しております、デベロッパーズコネクト室のディレクター、石川セナと申します。よろしくお願い致します。
ありがとうございます。ありがとうございます。
あの、本日ちょっと大変です。
あの、大盛況でして、ものすごく緊張しておりますので、暖かく見守っていただけますと嬉しいです。よろしくお願い致します。
いや、今言った通りですね。
あの、本日会場にお越しいただいた200名近くの皆様、そしてYouTubeで視聴いただいております800名以上の皆様、誠にありがとうございます。
一ヶ月半前に企画をスタートしまして、12日前ぐらいに告知をさせていただいたんですけど、このような大盛況な会になっております。
主催者一同、本当に心からお礼申し上げます。
ええ。本当に皆様の開発の未来への関心の高さを実感しております。
はい。このイベントについてですね。
開始させていただく前に、会場に来られている皆様への案内をさせていただきます。
ええ。まずお手洗いについてですが、フロアを出て、左手に男性用、右手に女性用がございます。
左手に男性用、右手に女性用がございます。
ええ、続いてWi-Fiについてですが、会場の壁に掲示されているパスワードをご利用ください。
「CA_OMOTENASHI」というSSIDに接続して、パスワードを入力してください。
続いて、喫煙所についてです。
17階に喫煙スペースがございますので、ご利用ください。
飲食に関してですが、会場内でお飲み物を飲んでいただいて大丈夫ですので、喉が渇いたら気にせず水分補給してください。
最後に、写真撮影に関してのお願いです。発表の様子は撮影いただいて大丈夫ですが、フラッシュのご使用はお控えいただけますと幸いです。
また、SNSへの投稿も大歓迎です。
ハッシュタグ #AICodeAgent祭り をぜひご活用ください。
以上、会場内のご案内になります。
さて、本日のイベント「AIコードエージェント祭り」は、開発の未来を劇的に変革するAIコードエージェントをテーマにしたカンファレンスです。
我々の開発環境は今、AIコードエージェントによって歴史的な転換期を迎えています。
ええ。チャットボットや講道館を超えて、開発速度を5倍以上に加速させる可能性を秘めたツールが次々と登場しています。
ええ、カーソルやウィンドサーフ、クラインなどですね。
次世代の開発を支える画期的なツールについて、様々な知見をシェアしていきたいと思います。
ええ、本日はですね、エンジニアの方々はもちろん、ビジネスリーダーや非エンジニアの皆様にも価値ある情報をお届けできると思います。
ええ、プログラミングはもうエンジニアだけのものではなくなりつつあります。アイデアが重要です。
素早くプロトタイプを作りたいですか？プロトタイプ化したい方へ。
業務効率化に興味のある方、テクノロジーの民主化の波に乗るためのヒントを今回このイベントで得ていただければと思っております。
はい、そしてこちらが本日のタイムスケジュールになります。
えっと、ただいまの時間からですね。
21時5分までLTセッションを行った後、21時から22時まで懇親会・ネットワーキングの時間とさせていただきます。なお、大変恐縮ですが、休憩時間を設けておりませんので。
お手洗いなどの際には、ご退室いただくことが可能です。
はい。よろしくお願いいたします。
イベント終了後、会場の皆様には簡単なアンケートにご協力いただけますと幸いです。
今後のイベント改善に活用させていただきます。
はい。そして本日、登壇...。
内容に関するご質問は、随時Xにて受け付けております。
ぜひハッシュタグ #AICodeAgentFestival と合わせて質問してください。登壇者のハンドルネームをつけてポストしてください。
登壇者の皆様が後ほど質問をピックアップして直接回答する場合もございますので、ぜひ皆様のお声をお聞かせください。よろしくお願いします。
では、まず始めましょう。
株式会社サイバーエージェントAI事業本部統括兼株式会社NGDX代表取締役の堂前典夫さんより、AI公募エージェントにかける熱い思いを語っていただければと思っております。
トモエさん、よろしくお願いします。
あ、先ほどはすみません。まずはご経歴の紹介をさせていただきます。大変失礼いたしました。
江戸間さんですね。
2003年に新卒入社後、広告代理事業からキャリアをスタートされ、数々の新規事業の立ち上げや子会社経営を成功に導いてこられました。やりきる精神のもと、困難なプロジェクトを次々と克服されています。
現在は、医療DX市場でオンライン服薬指導や薬局DXなど革新的なサービスを展開されています。
また、AI技術を活用した医療分野のデジタル化を推進しています。
持続可能な社会の実現に取り組まれています。
山井さん、よろしくお願いします。
あ、はい。ご紹介にあずかりました。どうもえと申します。
よろしくお願いします。あの、冒頭についてですが。
サイバーエージェントのビジネスリーダーとしてですね。
少しご挨拶させていただきたく、お時間を頂戴しております。
あの、一ヶ月半前ですかね。
あの、軍太さんからこの会の話を聞いてですね、後ほどご説明しますが、僕はずっと、うちのメンバーにカーソルを使えと言ってきました。もう去年からです。
夏ぐらいからですかね。
結構早い段階でですね。非エンジニアとして、早い段階で目をつけてやっていました。まさかこれほどの人数が集まる会になるとは想像もしていませんでした。僕自身はとても楽しみにしています。このAI行動エージェンシーについても。
本当に経営を変えるほどのインパクトがあるものだと捉えています。自分自身も使っていますし、メンバーにも使ってもらっています。改めて皆さんの顔を見たり、YouTubeの画面越しに1000人以上の方が見ているのを感じると、すごいことだと思います。
そういう方がいらっしゃると聞いていますが、これだけ多くの人が集まって...。
大きな注目を集めているというのは、まあ僕も。
自分のセンスもそんなにずれていなかったのかなと思いつつ、世の中の動きに本当に大きな波が来ていると改めて感じています。
そういうところにいます。
はい、私はサイバーエージェントである事業に携わっています。
本部では、AIを使ってプロダクト開発を行っています。広告の運用や制作の自動化などです。最近では対話技術にも力を入れています。
自立対話を使って、リアル店舗でお客様を接客するようなプロダクトを開発しています。AIを研究し、社会に実装しています。
これらのプロジェクトを事業化し、収益を上げる事業を統括しています。
サイバーエージェントで23年目になります。インターネットの黎明期から頑張ってきましたが、今はAIの大きな波に乗っています。20年越しの大きな瞬間です。
今また大きな変化が訪れています。
先ほど申し上げたように、本当に...。
この大きな変化にワクワクしています。
そういうところです。
はい、あの、本当に手短にお話しします。
ポイントをかいつまんでお話しします。先ほども言いましたが、経営に大きな影響を与えます。
お伝えした通り、これはAI、特にAIエージェントについての話です。
最初に見たときに、ワークフローを自律的に動かすところに感心しました。
エンジニアであり経営者として。
私の視点から言うと、これまで20年間、自分の構想をもとに人を集め、資金を集めてプロダクトを開発してきました。それには多くのお金と人手が必要でした。
今では、自分の構想をエディターに打ち込むだけで済みます。
エージェントをたくさん動かすと、あっという間に物ができてしまいます。ただし、数百万人が使うようなサービスを作れるかどうかは、まだわかりません。
どういう意味ですか？そうではないんですけれども。
MVPレベルのものであれば、ええ、まあほぼ十分です。完全ではないですが、実際にはほぼ十分なものが作れると感じています。ですので、集める資金の大きさも...。
集める人の数や、オフィス環境一つとっても、今までとは違っています。
会社経営や事業立ち上げのルールが大きく変わっていると本当に思っています。ですので、
これは非常に危険だと率直に思っています。特にサイバーエージェントのような企業にとっては。
皆さんから見ると、大きな会社に見えるかもしれません。私たちには「遠くに行くなら大人数で」という言葉があります。
人を集めて一生懸命やってきました。しかし、これまでやってきたことがもしかしたら...。
明日から変わってしまうのではないかと本気で思っています。まあ、おそらくそうなるでしょう。
先日、DNAの難波さんの動画インタビューでもデビンの会社の話がありましたね。20人ぐらいで3000億の価値になっているというところもどんどん出てきています。あと半年後、一年後にはもっと増えていくだろうと思っています。はい。そして、そういったAIエージェントについて...。
AIエージェントを活用していくためには、今日のテーマに注目する必要があります。
AIコードエージェントは必須のプロダクトになっています。AIエージェントを重視している会社経営者からすると、
ええ、強力なAIコードエディターを。
まあ、自社で保有するといいますか。
しっかり投資して、自分たちの強みに変えていくことが、まずやるべきことです。
というわけで、今日ここに立たせていただいているということです。
あの、まあ、そういったツールってね。
ハリー・ポッターで言うと、なんて言うんでしょうか。
魔法の杖とかステッキみたいな感じになっていると思います。
実際、皆さんも使ってみた感じはそうだと思います。
杖を一振りして、プロンプトを入力すると、製品として返ってくるという形になっています。そうですね、ハリー・ポッターのように強い杖が最強ですけども。そういったツールをしっかり選定して、自分たちで使い込んでいくことが大切です。そして、その上で、美男の杖も取り入れて。
皆さんご存知の通り、渡されてもすぐに使いこなせるわけではありません。
しっかり使いこなせるようになるための一連のプロセスを、これからやっていかなきゃなと思っています。それを最初にできたところが、これから？
大きな波に来るAIエージェントの中でしっかり生き残って勝ち残っていける、強い会社や組織になっていける。
人間になっていけると信じています。今日、このAIコードエージェントを皆さんと一緒に学んで、「こんな使い方もあるんだ」とか「あ、そうなんだ」と思えるようにしたいです。
ホテルがめちゃくちゃ進化していることに気づいて、多くの発見を持ち帰れると思っています。
短い時間ですが、それを楽しみにしています。
皆さんと一緒に楽しめればと思います。
冒頭からこんな雰囲気でいいのかと思いますが、最後に面白い話を。今日は僕の誕生日です。
冗談抜きで本当です。後ほど僕のツイッターを見てください。
ぜひ見ていただければと思います。今日は特別な日ですので。
皆さんと明るく元気に楽しんでいきたいと思っていますので、どうぞよろしくお願いします。
それでは、頑張っていきましょう。以上です。
ありがとうございました。お誕生日おめでとうございます。
ではですね。
はい。それでは、公園の方に移りたいと思います。
ええ、繰り返しのご案内になりますが、本イベントではリアルタイムAI通訳のサービスをご利用いただけます。
画面のQRコードまたはリンクをご使用ください。
Your time。
翻訳サービスは現在利用可能ですか？
画面のQRコードをスキャンするか、リンクをたどってアクセスしてください。
よろしくお願いします。
それでは、「なぜ今、開発を変えるのか？」というテーマで、弊社CPO統括室のグンターブルナさんにお話しいただきます。
まずは彼の経歴を紹介させていただきます。応募STFの生みの親として知られる技術イノベーターです。
文太さんは文部科学省の国費留学生として来日し、その後サイバーエージェントに入社しました。
これまで数々の革新的なプロジェクトを主導されてきました。特に、ハーブスターで1万3千を超えるスターを獲得しました。
彼の支援は世界中で高く評価されています。現在はAIを活用したプロジェクトに取り組んでいます。
開発生産性の向上に取り組み、次世代の開発環境について探求されています。
そして、今回のイベントの企画者でもあります。
では神戸さん、よろしくお願いします。
お願いします。
皆さん、こんにちは。
今夜は英語で話しますので、このURL sh.hachiko に参加してください。
では、始めます。
皆さん、ようこそ。
今日は、私自身の旅についてお話ししたいと思います。
このイベントを開催した理由と、今後の展開について説明したいと思います。
私の名前はグンターです。このイベントを作った理由を説明するために、個人的な話をさせてください。一見ランダムに思えるかもしれませんが、実は点と点がつながっています。
私はアルゼンチンで生まれました。
アルゼンチン出身の人々、例えばメッシやマレー、あるいはPurcellのCEOを知っているかもしれませんね。
彼らはみんなアルゼンチン出身です。
アルゼンチンに行ったことがありますか？
本当に遠すぎますね。
日本からちょうど12時間の時差があり、飛行機で約24時間かかります。
話はこうです。子供の頃、数学を勉強していました。
オリンピックにも行っていたので、数字が大好きです。
でも、その後何かが起こりました。
学校にいるときにアニメを見ていました。
それから、セントジョセフィアが好きになりました。
その頃、ギリシャに行こうかと考えていました。でも、高校では電子工学を学び、ロボットを作ったり、アセンブリでプログラミングを始めました。
ほら、基本的なことは全部知ってるでしょ。
それで、コンピュータサイエンスを学びに行きました。
C言語が好きになり、問題を解決するのが楽しくなりました。私と同じくらいの年齢の方ならご存知かもしれませんが、実は今でも存在する場所があります。それがConsoles Forceです。
基本的には昔のGitHubのようなものです。
私はCode Blocksというオープンソースプロジェクトに貢献していました。これはCarsorのようなもので、20年前のものです。ちなみに、今でもメンテナンスされていて、C++を使っています。
開発者もGarisha出身です。
それから、私にとって悲しいことが起こりました。
誰も知らないみたいです。
このエディターについて聞いたことありますか？
多分誰も知らないですよね？
そう、良いソフトウェアを作っても誰も使わないとこういう問題が起こるんですよね。
だから、デザインとかを学んで、人々が自分の作ったソフトウェアを使いたくなるようにした方がいいかなって思ってたんです。
それで、そうすることに決めました。
グラフィックデザインの勉強を始めたんですが、
うまくいっているのか分からないんです。
今日、イベント用のランディングページを全部作りました。
これも私が作りました。基本的に、見ているグラフィックは全部私が作ったものです。だから、どれだけ学んだかは分からないけど、勉強しているときはアニメを見たりゲームをしたりしていました。
それで、日本に行くべきだと気づきました。
多分ね。それから友達と一緒に、コスプレや日本のラーメンなどで約5000人を集めるイベントを始めました。そして、3人の人が私に大きな影響を与えました。
それで日本に行くことを決めました。この3人は、Yoshiki、Shinkai Makoto、そして任天堂のKaiのような人たちです。
なぜかって？ただ、そうだから。
この3人は、何でも一人でできるんです。
彼らは他の人を必要としないけれど、他の人と協力したいとも思っているんです。だからとてもクリエイティブなんです。
その時、Macintoshを発見して、スティーブ・ジョブズの存在を知りました。
彼が禅を好んでいることも知りました。うーん、日本に行ってグラフィックデザインを学ぶべきかも。
そして、それが旅の始まりでした。Adobeが調査を行ったところ、日本は世界で最もクリエイティブな国だと一般的に認識されていることがわかりました。
それで、決心がつきました。
行くべきかもしれないけど、まず日本語を学ばないと。
挑戦を受け入れました。
日本に来るための奨学金があることを知りましたが、非常に競争が激しいです。50人中1人しか受かりませんし、私は3回失敗しました。
だから、これが最後のチャンスです。
受かりました。
4年後、素晴らしいことに、旅行や生活費などの費用をカバーしてくれるんです。本当に驚きです。
返済する必要はありません。
ありがとう、Momokakso。
実は、このイベント全体がMomukaksoのおかげで存在しています。
本当にありがとうございます。
もうすぐ日本に到着します。
今日は東京に初めて来ました。えっと、2007人に話を聞きましたが、最初は大変でした。
まあ、日本語は「こんにちは」ぐらいしかわからなかったので、しっかり勉強しました。その後、いろいろなアルバイトをして、例えば映画『アンビリバボー』や『ゼロの焦点』に出たり、結婚式場で働いたりしました。いろんな経験をしながら日本語を学びました。
ええと、翻訳の仕事もしていて、政府の翻訳などもやっていました。
えっと、やはり今、AIで…
仕事がもう目の前になくなっている状況です。それで、グラフィックデザインも二年間勉強して、今のレベルに達しました。自分ではあまり満足していませんが、まあ良かったかなと思っています。もともと理系出身なので、デザインの...。
デザインセンスって生まれつきのものかなと思っていたんですけど、どうもそうじゃないみたいです。
磨くもので、やればやるほど良くなると先生に指摘されました。
指摘されて学ぶ、まさにLLMのような感じですね。
それで、ITベンチャーに行って、Androidを見たりしました。
奨学金の意味は何ですか？
さっき話してたんですけど、なんで日本はそんなに豊かな奨学金を出しているのか考えました。生活費まで出してくれるのは、所得税で倍返しされるからというのもあるし、国に帰る人たちが貿易などで日本にポジティブな影響を与えるからですね。
まあ、だいぶいい年になってきたんじゃないかなと思うようになりました。
2012年にサイバーエージェントに入社しました。
ええ、その時はスマホシフトの時代でした。今はAIシフトですが、その時はスマホシフトだったんですね。
その時すごく驚いたのは、ベンチャーから来たので、一人でデザインやPHPなど全部やっていたのですが、サイバーエージェントではHTML、CSS、JavaScriptなどがそれぞれ別の担当者に分かれていることでした。すごいと思いました。
本当に分業が進んでいました。
すごい分業されていて、孤立化しているなと思いました。
それから、いろいろなAndroidプロジェクトに取り組んで、OpenCityFというものを開発しました。この時は良い経験でした。
まあ、成功と言ったらあれなんですけど、GitHubで1万3千スターを獲得しました。GoogleやAmazon、GMOといった大手企業にも使ってもらっていました。
それで、コロナが来て、リモートワークで沖縄に移住して、素潜りにはまりました。
魚突きにもはまって、そしてAIが来てしまったと。「これはやばいな」と思って、東京に戻りました。英語と日本語の差がすごくあるなと感じました。
歴史を最近調べていて、去年面白いことを発見しました。IT業界では英語が非常に重要とされていますが、実は明治時代に面白いことがあったんです。
その17年間で、最先端の技術をすべて日本語に翻訳したんですよね。
その時は四つの言語しかなくて、日本語は含まれていませんでした。それ以来...。
政府が多額の資金を投入して、すごい翻訳プロジェクトを始めたんですね。
これで日本の...まあ、わかりますよね。
ええと、あれですね。うん。
輸出が30%だったのに、いきなり...。
17年間で60%を超えました。
GDPは3%成長しましたし、翻訳を通してすごいことができることが証明されました。この論文に興味のある方はこちらにアクセスしてください。今日は祭りですね。
で、なんで開発を変えるかというと、さっきの話に近いんですけど。今、Level Oneはプログラミングビームとかを使っています。
皆さん、Level Oneでは、まあ、MTマニュアルのようなものです。楽しいし、趣味だと思っていただければ。
GitHub Copilotを使っている方は、まあ、LLMとかになります。
まあ、プリウスかなっていう感覚です。
レベル数になると、まあ、エージェントですね。
自動運転ですら、運転しながらアニメが見れちゃうっていう世界です。
で、その次のステップは、えっと、MCPかなと思っていて。まあ、スカイネット接続をするっていう意味合いなんですけど。
まあ、こちらはMCPとエージェントをつなげて、いろんなことができてしまう。
で、まあ、想像を超えたAI。
コサインのためにマカッサルからウィンザへ征服する。
個人的には本当に推しています。
この辺はちょっと飛ばして。で、なんでこのイベントなの？
本当の理由は、仲間を増やして、それを使っている人たちとつながりたかったからです。
正直、一人で会話しているような感じをやめたいんです。それが本当の理由です。だから、スマートシフト以上に今危機感があって、日本での仲間を増やしたいと思っています。
で、クロード3.7が出ましたね。もう7割くらいのコーディングタスクを任せています。
で、経営者にとって何が変わるのでしょうか。
えっと、さっきドバイさんが言っていたように、それ以上に新しいビジネスモデルができているので、経営者も自分で触ってみないと、エージェントをどうするかといった話がわからないかもしれません。
ビジネスモデルを含めて、触っておかないといけないでしょう。
エンジニアにとっては、マニュアルのようなものです。楽しいかもしれませんが、隣の人が10倍のパフォーマンスを出していると、趣味としてはいいですが、AIエンジニアとしては...。
エージェントをうまく活用するエンジニアは、それを仕事の一部と考えるようになると思います。
クリエイターの方が一番の勝ち組になると思います。
やりたいことがもうすぐ実現できるようになります。
これはちょっとスキップしましょう。
エンタープライズ。
エンタープライズの話なんですが、ちょうど昨日、弊社でカーソルが...。
セキュリティチェックなどが済んで、使えるようになるという話をいただきましたので、各自で使っていくことになると思います。エンタープライズでも問題ないようです。
分業の時代は終わりを迎えつつあります。
そう思います。
なぜかというと、AIを使ったほうが早いことがたくさんあるからです。
例えば、経営者が何を勉強すればいいか迷っているなら、リニアやスーパーベースのような多くの会社がタイプスクリプトに移行しているので、迷うなら一度タイプスクリプトに寄せてもいいかもしれません。そして、実際にチームも...。
やはりパフォーマンスを発揮できます。
それで、2025年のエンジニアについてですが...。
必要なスキルは何でしょうか？まあ、コーディングエージェントやMCPなどになるのではないでしょうか。
そして、このパラダイムシフトが起きています。
PCから自動運転など、いろいろなことが進んでいます。
先ほどビジネスモデルについて話しました。
彼は結婚式のためのホテルを探しています。
業者のホテルについては、こちらが...。
これは嬉しい驚きです。
つまり、これはAIエージェント同士が会話しているんです。
それに気づきました。エージェントが効率よく会話するようになるんですよね。
で、これはもう実際に動いているデモです。いずれ世界がこういうふうになるので、えっと、B to CとかB to Bのモデルがありますが、これはですね。
実際には、会社の情報やサービスを操作できるようになります。
その通りです。
興味のある方は、こちらのGitHubで試してみてください。
それで、先ほどのUXの話の延長で言うとAXになります。要するに、エージェントが好むインターフェースですね。
これからは人間ではなくエージェントのためにソフトを作っていかなければなりません。例えば、それはECPかもしれません。
この後、どなたかのセッションで説明していただけると思います。ぜひご期待ください。
経営者の方には、B to AやA to A、C to Aといった言葉を覚えていただきたいです。これらは新しい可能性を示しています。
エージェントに関するさまざまなことを行っており、現在積極的に採用を行っています。CTOやAIを活用した全社的な取り組みを行っていますので、興味のある方はぜひご参加ください。ご清聴ありがとうございました。
はい、グンターさん、ありがとうございました。
では、これからLTセッションに移りたいと思います。
最初の発表は「AIコーディングエージェントvs」です。
「AIコーディングエージェントvs従来のコーディング補助ツール」と題して、株式会社アクセプトのAIエンジニア、小田津和也様にご発表いただきます。
ご発表の前に、小田津様のご経歴を紹介いたします。
LLMとクラウドテクノロジーの専門家であり、投資家としても活躍されています。
これまでに複数のAIプロジェクトを成功に導き、特にエンタープライズ領域でのAI実装に関する豊富な経験をお持ちです。
最新のAIコーディングエージェントから従来型の開発支援ツールまで幅広い知見を生かし、技術評価や実装戦略のアドバイザーとしても活躍されています。
ええ、本日はですね、北海道からリモートでの登壇になります。
では、帆立さん、よろしくお願い致します。
見えておりますでしょうか。
はい。今...。
画面のほう確認できております。発表の方、よろしくお願いいたします。
はい。ありがとうございます。
えー、それでは改めまして...。
アクセプト株式会社という北海道の企業を経営しております。
えー、なつと申します。
えー、Xの方では...。
「ホーダツ」というのはちょっと変わった漢字を書きまして。
足立さん、ありがとうございました。
ありがとうございます。
それでは、次のセッションに移らせていただきます。
続いての発表は、「AIエディタエージェントのリアリティと近未来」と題して、株式会社キープランニング代表取締役の木下雄一郎様にご発表いただきます。
まずは彼の経歴を紹介します。
AIエディタの第一人者として知られる技術執筆家であり開発者である木下様の著書「AIエディタカーソル完全ガイド」は、実践的なAIツール活用のバイブルとして多くの支持を集めています。
また。
「ソフトウェアデザイン」での連載を通じて、最新のAI開発手法についても発信し続けています。
特にカーソルやウィンドサーブなどの次世代開発ツールに精通しており、SSAIを活用した効率的な開発の普及に尽力されています。
それでは、ご準備ができましたら、発表をよろしくお願いします。
えっと、これ。
コール。
ええ、たくさんの方がいらっしゃっていますね。
大盛況で嬉しいです。
えっと、早速始めましょう。
スライドから始めようかと思っています。今日はAIエディターとエージェントについてです。
「リアリティと近未来」というお題をつけましたが、あまり気にしないでください。
実際に話すことはですね。
最近あったいろいろなことについてです。
最近感じていることを、だらだらと話します。
気軽な感じのものなので、あの。
今までのかっこいいプレゼンテーションとは違って、すごくこう。
本当に世間話を聞くようなノリで聞いていただければと思います。
いきなり告知になります。
実はですね、今日のスケジュールを事前に確認したんですけど、もうすでに私の時間が終わっているんですよ。
ええと、まあ、いずれにしろですね。
時間は結構知ってる。
それと、今日考えていた内容はもともとの時間枠には収まりきらないボリュームだったので、全部話すのは無理でした。だから、最初から別の方法を考えていました。
ええ、勉強会でですね。続きをやるということで、こちらの紹介を最初にさせていただくことにしました。
AI駆動開発勉強会が3月10日にあります。オンラインの枠がまだ空いているそうなので、興味があればぜひご覧ください。
これで自己紹介になります。
えっと。
株式会社キープランニングという会社を経営しています。私は昔からデータベースをメインにやってきましたが、近年は面倒なことはスタッフに任せて、自分はシステムのアーキテクトやバックエンドの設計に集中しています。
そんなことばかりやっています。
そういうことが多いですね。
自分でコードを書くなんて、しばらく忘れていました。
それで、最近、えっと。3年くらい前ですかね。
ChatGPTが出てきた頃ですね。
そこで改めて面白いなと思って、また入門し直した感じです。今は毎日やっています。
カーソルとWindows、サーフェス。
画面を見合わせながらですね。
僕はその辺のエディタを擬人化しているので、なんとかちゃんとか話しかけながら仕事をしているような状態です。それで、一応会社を作りました。
去年の10月で30年になりました。
おそらく業界の中で最高の会社の一つじゃないかなと思います。それで、一応いろいろ書いたほうがいいかなと思って、登壇歴とかも書いてあります。
何も書かないと寂しいですよね。
一応そういうことです。相談できるところの一番下に書いてあります。
政府情報工科学院で、先週だったかな、クラウドアプリ開発実践講座の最終回がありました。そこで、Windows Surfaceを使ってNext.jsでウェブアプリを開発し、それをAWS環境にデプロイしました。
そういうことです。
ウィンドサーフを使ったんですけれども、CEOのやつですね。
ええ、バランモハムスに相談したらですね。
学生向けにクーポンを出してくれて、とても協力的でした。
なので、ここで改めて感謝の意を表したいと思います。
ええ、執筆ですね。
まあ、ここで私のことを一番知っている方が多いんじゃないかと思います。ええ、「AIエディタカーソル完全ガイド」という本を書いています。
えっと、こういう本ですね。
で、えっと。最近ですね。
また、えっと、「ソフトウェアデザイン」という月刊雑誌ですね。
まあ、この業界では一番多分月刊雑誌というか、もう生き残っているところはほとんどないですよね。
昔はいっぱいあったんですけどね。一番信頼がありますね。
というか、そういう雑誌のところでですね。
実は去年の10月ぐらいだったかな。AIエディターか何かの話があった時に、実際には書いていないというちょっとした事件がありました。これはいかんということで、早速向こうにメールをしまして、これはいかんということで、まあ半ばこうなんて言うんですかね。
道場破りみたいなメールを送ったんですよ。
心の広いあの大きな会社でですね。「じゃあ書いてくれ」ということになりまして、今売っているものがカーソルの特集号になっています。
よろしければ、ご覧ください。
で、来月号からはプログラミング×AIの最前線ということで。
ええ、そのタイトルでいろいろと月間で連載をすることになりました。実は昨日、原稿が上がってきました。その1回目はウィンドサーフィンの話題になっています。初稿を見たら、なかなか面白いなと自分でも思ったので、ぜひ皆さんもご覧いただければと思います。
以上です。
まあ、こちらが本の表紙ですね。で、一応これです。
世界初のカーソルというか、未だに世界初のままですね。あまり書籍が出ていないようです。
やっぱりこの業界は動きが激しいので、本を書くのはなかなか大変ですよね。だから、紙では絶対無理だと思って、最初からギター部のサポートリポジトリで内容を更新していくスタイルでやっています。で、さすがにまだ発表されたばかりのバージョン0.64かな。まあ、追っています。
ついてないですね。零点です。
えっと、本が古くても大丈夫です。
ということで、今、書店で見つけても安心して手に取っていただければと思います。
で、こちらが今実際に販売されている月刊雑誌「ソフトウェアデザイン」の表紙ですね。
で、こういうところにカーソルがちゃんと出るようにしたのは、私の一つの功績かなと勝手に思っています。
来月以降も連載が続きます。
楽しみにしていただければと思います。
すみません、ちょっと喉を痛めていました。
声が少しハスキーですが、これもキャラだと思ってください。さて、ここでカーソルチームと一緒に振り返ってみましょう。
いろいろとお付き合いがありまして。
それについての振り返りをお話しさせていただきたいと思います。
去年、書籍を書くことが決まりました。5月頃から始めました。
6月中にはすべての原稿を書き終えて、あとは出版を待つだけだったんですけど、本当に時間がかかるんですよね。
三ヶ月ぐらい待ちました。その間にどんどん状況が変わっていくんですよね。
カーソルが本当に気になって仕方なかったんですが、ちょうどその時に表紙の試し刷りが出てきました。その頃、ツイッターでカーソルチームの4人の共同創業者の一人であるアマンを見かけました。
来週、うちのオフィスでカーソルのミートアップをやるから、来たい人はおいでって声をかけたんですよね。
そしたら、すごい数のリプライが来て、確か200ぐらいあったと思います。
その大半が「行きたいけど、ロンドンだから行けない」というものでした。
行きたいけど、ニューヨークだから行けないっていう話でした。
なんと、1週間前に日本から来る人がいるとは向こうも思っていなかったようです。でも、突撃しました。弾丸ツアーを組んで、参加するのは1日だけで、前日に移動して、翌日の朝5時には出発したので、本当に弾丸でした。
その時に公開前のバージョンを見せてくれるということと、やっぱりチームに会いたかったんですよね。
それで、現地に行きました。
本当にいろいろ面白かったです。その時にチームのメンバーが現地の人を紹介してくれました。
会うたびに「コンポーザーどう？」って聞かれました。当時、出たばかりだったんです。何を改善してほしいか、日本のユーザーが何に困っているか、何をしてほしいかを知りたがっていました。
みんなに聞かれました。この会社やこのソフトは、本当にユーザーのことを大切にしているんだなと感じました。ニーズをしっかりと組み上げようとしているのがよくわかりました。
10月に本を出した後で、
改めて訪れる機会がありました。
サンフランシスコにまた行って、本を持って行き、このTシャツを買ってきました。とても喜んでもらえました。当時はね。
今日、そのメンバーも来ていますが、カーソルのハッカソンをやっていました。
その話をしたりして、現地はとても盛り上がりました。
日本でそんなに売れてたっけ？
そんな話も出てきたんですが、そこで聞いたところによると…
今、一番売れているのはカーソルです。国別で言うと、アメリカです。
やっぱりダントツで二番目が中国、三番目がインド、四番目が日本ということでした。いずれにしろ、
まあ、結構上位に入っているので、いいんですけれども。もうちょっと頑張って、さらに上を目指したいですね。
上位に行けるといいですよね。
ええ、こちらはちょっと個人的なことになってしまうんですけども。これは実は、去年の誕生日のツイッターの写真なんですね。ちょっと個人的な事情により、
当日一人だったんですって。一人で誕生日ってなかなか寂しいですよね。なので、ちょっと派手に何か食べて祝おうかなと思って。
レッドロブスターに行きました。
ロブスターを食べていたんですよ。そしたら、当日誕生日の人には花火か何かのツイッタースイーツを出してくれるっていうのをやっていて、それを写真に撮りました。
写真を撮ってくれたので、ツイッターにあげたんです。そしたら、カーソルチームのみんなが「ハッピーバースデー」ってコメントをくれたんですよね。
それが本当に嬉しくて、すごく幸せでした。
寂しい誕生日が一転して、とてもハッピーな日になったという話です。
それ以降、いろいろな付き合いが続いていて、特に開発の面で関わっています。
ナイトリーバージョンというのは、ほぼ毎日更新されるのでそう呼ばれています。今テストしています。
新しいバージョンのCounselが何に取り組んでいるのかを、皆さんより少し早く知ることができるんです。特に日本のコミュニティに対して、かなり報告しています。
最大の貢献は...。
皆さん、画面の下に四角いものが...。
黒いクエスチョンマークのように見えます。わかりますか？
わかる方、手を挙げていただけますか？
結構いらっしゃいますね。
カーソルを日本語環境で使っていると、更新するとコメントの部分が文字化けするという問題がありましたよね。みんな苦労していましたよね。
それで、みんな結構長い間我慢して使っていたんですが、去年の年末に...。
フォーラムにも上がっていたので、どうしようかと思ったんですが、日本のメンバーやユーザーがこんなに困っているからなんとかしてほしいとテスターの方に伝えました。
そんなことがあったんですね。実は、そのことが伝わっていなかったようです。
それで取り組んでくれて、本当に数日で解消しました。解消したのは本当に年末、大晦日くらいだったんですかね。
いずれにせよ、今はみんなが心配せずに使えるようになったのは、僕が貢献できた部分かなと思っています。
ということで、ようやく本日のお題にたどり着きました。AIエディターのエージェントとリアリティと近未来ということなんですけれども、「エージェント」という言葉が独り歩きしていて、非常に意味があるように感じます。
わけがわからない状態になっていますが、僕がよく使っている「エージェント」というのは、エディターの中で何ができるかということです。
プログラムの作成は当然できます。
そのプログラム自体を自分で実行することもできます。そして、ええ。
各社のコマンドも実行できます。
もちろん、OSのコマンドも実行できますし、インストールも可能です。例えばVIPやnnpとして入ってくるものも含めて、すべて実行できます。3つ目が一番重要なのですが、その一と二を組み合わせてAIが自律的に考えることができます。
預けられたタスクを遂行する能力があります。
それを「エージェント」と呼んでいます。
このエージェントの機能は、昨年の秋にWindows Surfaceによって最初に実現されました。
ここでのポイントは、プログラムは通常ループや繰り返しを使いますが、それは固定的なルールに基づいています。それに対して、エージェントはAIを使って、その時の状況に応じて自律的に判断を行います。
まあ、大きな違いがあるということです。
それで、本当にすごいですね。
実際、多くのことが便利になりましたが、まだ課題があります。それが今回のリアリティという部分で私が指摘しているところです。いろいろなことができるようになった反面、学習コストも徐々に上がってきています。
そんな感じです。
最初は、ChatGPTのウィンドウがエディターの横にあるだけだったのが、今ではいろいろなことができるようになりました。
逆に、難しくなってきています。
それで、複雑なコマンドの構造があります。例えば、VS CodeとCopilotを使っていると、エージェント記号やコマンド記号がたくさんありますよね。
さらに、それに加えて、機能ごとに追加しないと使えない機能がいろいろあります。
カーソルの設定もかなり増えました。最近では、ユーザーインターフェースが少し複雑になりすぎている部分もあります。
ええ、それを指摘していました。でも幸いにして...。
最近、改善の方向に動き出していますよね。
それに、アットマークで使える参照のマークもかなり増えています。
ということで、少し難しくなっている感じがしますね。
もう一つは、人がAIに意図を伝えるのに苦労しているということです。人間が一生懸命AIを利用しようとしている部分があると思います。
プロンプトの書き方やコンテキストでの参照ファイルの与え方、設定のオンオフなどですね。
カスタムインストラクションなどですね。ということで、苦労しながら頑張っているという形です。
そこで、ようやくWindows Serveが出てきました。Windows Serveについてですが、まあ...。
面白いですね。解決策の提案のようなものをしているので、それを今日は紹介しようと思っています。
それで、Windows Halfは去年の秋にリリースされました。それ以前は...。
影も形もなかったんです。
実はここに日にちが書いてありますが、上の方のウィンドサーフは1月13日にリリースされます。
その時はバージョン1.02で、ウェブワンと呼ばれていました。それで、その時のカーソルはどうだったのでしょうか？
その時は、コンポーザーが複数のファイルを編集できるというところまででした。それが追いついたのが、10日ちょっと後の11月24日です。世界初のエージェント搭載エディターは実はウインドサーフです。だから皆さんの頭の中でどうしても。
実はこの面ではカーソルが強いんです。
ウインドサーフは先を見ています。
そこから始まったんです。
当時から大変な話題になりました。ツイッターやユーチューブでも大きく取り上げられて、私もすぐに評価しました。
でも、やっぱり細かい機能が重要ですよね。
まだどうしても足りない部分があって、すぐに実践には使えないということで、ツイッターなどではよく「大型新人」と呼ばれていました。
まあ、しばらくは眠らせている状態が続いていました。
そして、今年の1月中旬に「ウェーブツー」というものが出ました。それで、@マークでウェブやURLを貼り付けたりすることで、モデルが知らない知識を外部から与えることが容易になりました。それで僕も結構積極的にいろいろとやり始めました。
レビューをして、ネットでいろいろコメントしていました。
それは突然でしたね。バランモハンというCEOの人から、ツイッターでダイレクトメッセージが来たんです。
最初は「誰この人？」って思ったんですけど、「グレイトシーユーフィードバックand you are well」というメッセージが来ていました。
「Under Stand the Proブラック」ということで、「あなたのフィードバックと製品をよく理解していることを見るのは嬉しい」というようなコメントがいきなり来ました。
そこから、いろいろと交流が始まりました。
その翌日、ボルトニューとかで自分のインターフェースをうまく作れなくて、結構イライラしていました。
実は、その少し前にウィンドサーフの時代がありました。
画像を貼って、それを綺麗なウェーブのようなページにしようとしていました。
でも、同じことをやっているYouTubeの動画があったので、自分でも手書きでやってみることにしました。
これは実際の話です。
これは私が紙に手書きしたメモです。
どうして？裏まで透けて見えてるんですけど。
こんな汚いメモが実際にスマホにあるんですよ。しかもスマホで写真を撮ったんです。それをウィンドサーフの画面に貼り付けて、このスケッチを参考にして、女性向けの素敵なフラワーショップのランディングページを作りました。
実装してくださいと送ったんです。そして、実行した結果はかなり難しいものになりました。これが結構ですね。
当時、それはすごくウケました。
すごい。バズりましたよ。
結果的に18.5万インプレッションを達成し、世界中で見られた形になりました。
まあ、そこで結構。ええ、ウインドサーフィンの公式ツイッターアカウントでも紹介されました。そして、バラムさんとは当時から結構頻繁にDMが来ていて、日によっては女子高生のツイッターのような感じでした。
いや、LINEかよって感じで行き来がありました。で、まあ。
やり取りをしていたので、この機会に日本のユーザーにコメントをお願いしたところ、快く協力していただけました。では、皆さんにご紹介します。
ご紹介したいと思います。
全面には来ないですね。よいしょ。
では、行きますね。
もしよろしければ、私の名前はグル・モハンで、Podiumの創設者兼CEOであり、Windsorの開発者です。日本の技術的卓越性と革新文化は常に私たちのインスピレーションの源です。Windsorを構築し続ける中で、私たちはそのユニークな視点と価値観に刺激を受けています。
日本のユーザーからのフィードバックによると、あなた方の品質へのこだわりと先進的な考え方は、私たちのソフトウェア開発を変革するという使命と完全に一致しています。
この革新の旅を共に続けることを楽しみにしており、最高のものを提供することに尽力しています。
日本の開発者の皆さん、ありがとうございます、Vizagos。
どんな音楽ですか？
ですけれどもね、こうやって日本のユーザーにしっかりとメッセージを届けてくれる姿勢が嬉しいですよね。皆さんご存知かもしれませんが、ツイッターX上でのことです。
Windows Surfaceに関するツイートをするときですね。
CEOからたくさんいいねが来ます。
非常にユーザー寄りと言いますかね。
Windows 8はユーザーを大事にしているという文化が伝わってきます。
今日はウィンドサーフを使って、先ほどお話ししたような、今の現実を解消しようとしている試みの一つ、いやいくつかですね。
紹介しようと思っていました。
それがですね。
ちょっとお待ちください。コピーしますね。
まず、Webサーチというものをご紹介しようかと思います。こちらがウィンドサーフの画面ですね。
画面が少し小さくて見にくいですね。見えますか？
まあ、実行してから説明しましょう。
えっと、まあ、細かいことは気にしないでください。
簡単に言うと、このプロンプトだけでは実行に必要な情報が足りません。
で、ええ。どうするかというと、ネットで情報を調べないと答えられないはずです。
最新の情報で、しかも一番新しいのは、Gemini 2.0 Proの実験場の2月6日版です。
ええ、言っているのは、ここで注目してほしいのは、カーソルのように@webを使っていないということです。つまり、ネット検索はプロンプトの指示ではないんです。
AIが必要と判断したという部分がポイントです。
今日は時間的に、これの動く結果をお見せするのは難しいと思うので、飛ばします。このウェブの参照マークについては、バラムさんからも話を聞きましたが、ユーザーはカーソルのようにこういうことをする必要がないと。欲しいドキュメントがあればそれでいいんです。
とか。
正しいウェブ検索ができることを理解して欲しいということで、当社では不必要にウェブアットマークを使うことを望んでいないと言っているわけです。だから。
あ、この会社はこういう記号を使って動かすことを目指しているのではなく、ユーザーの意図を汲んで動く方向を目指しているんだなと、これで分かりました。
以下、いくつか例文がありますが、ちょっと飛ばしますね。
アンダーラインのあるところがポイントです。
指示がなくてもAIが検索が必要と判断して検索した、ここがポイントです。では、次に行きますね。次はもう一つ別の機能になります。
オートジェネレイティドメモリーズっていうことですね。何だろう？
さっきの没頭はまだ動いていますね。
じゃあ、ちょっと動かしてみましょうか。ああ。
あ、なんか動いています。
さっきのでちゃんと動くものができたということで、素晴らしいですね。次はメモリーの部分ですね。自然言語で記憶を指示します。
ということで、ChatGPTにもメモリー機能がありますよね。あれ？
ID版っていう感じです。面白いのが、これはドキュメントには載っていないんですが、向こうの技術者と話して分かったんですけど、ローカルメモリーとグローバルメモリーの2種類があるんです。
例えば、カスタムインストラクションのようなところで、日本語で回答してくれるようにするために、グローバルなところに書かなくてもいいんです。
グローバルメモリーには...。
プロンプトで「私は日本語で話すから、これ全部日本語で解答してください」と言えばいいんです。
グローバルメモリーに記憶してって言うと、記憶します。そうすると、どのワークスペースに行っても日本語になります。
そういう効果がある部分があるんですよね。ええ。
新たに知った部分なので、皆さんに強調してご紹介できればと思っています。
今日はちょっと時間が足りないので、ここは本当に飛ばしますね。ポイントはこれです。自然言語で記憶を指示することができます。
「記憶して」とか「どこどこに記憶して、ローカルにグローバルに」って言い方ができます。
それだけじゃなくて、実は指示をしなくてもAIが今後役に立つと判断すると記憶します。
例えば、僕が「赤が好き」と言うと、「わかりました。記憶します」となります。これで次にウェブページを作った時、赤くなるんですよ。
まあ、非常に面白いですよね。
記憶はAIが関連性があると判断した時に呼び出されるということです。
非常にAIの知能を利用して、人間の負担を軽減しようという思想があるわけですよね。
カーソルでは、新しいプロジェクト「rules」ができて、いろんなルールを適用できるようになりました。非常に多機能ですが、それを設定するのは人間です。この部分で思想の違いが結構現れていると言えます。
ここをやりましょうかね。
さっきのやつですね。
見えますか？
今入力したら、自動保管の機能が自動的に表示されます。
表示されているので、タブを押します。
ブロックで表示されるので、タブを押します。
よし。
どんどんタブを押してジャンプするというのは、カーソルタブのようなものです。これが表示されているときにやると、次のセクションに移動して、さらに別のブロックに行き、かなり大きな範囲に到達します。実用的には、ほとんど...と感じます。
ええ、カーソルタブですね。
同等の強さがあると感じます。
よいしょ。
というところですね。
本当はもう少しいろいろお見せしたかったのですが、次にあるのが変更履歴の把握です。
というところで、実はカスケードと言われているものです。
ええ、ウィンドサーフのAI機能は、エディター上でどのような変更がされたのかを把握しています。
そして実は、その情報を監視システムに送っています。
今日はちょっとお見せできないですけれども、例えば今やっていたように、日本語の部分を英語に変換することをタブで行いますよね。
その後、カスケードの画面でプロンプトを使って作業を続けるように指示すると、一気に全部処理します。だから非常に効率的です。つまり、IDとタブの機能が連動しているということになります。
ここはまるごと飛ばします。次回の勉強会で扱うと思います。
それで、ウィンドウサーフのもう一つの特徴は、コードベースの会社であることです。
これは非常に強い部分です。
最近、ツイッターのスレッドでも取り上げられていましたが、ASTと言われています。簡単に言うと...。
単に行動を分割してチャンクを管理するというのとは違って、コードベースを構造化して理解するという話が出ていました。これはRAGの機能とは少し異なります。
さらに、それを並列で処理することで、非常に素早く回答を得ることができます。
エムクエリというシステムもありますが、カーソルがうまくいかなかったところがWindows Surfaceでできたというのは、結構これが原因だったりします。
ここで理解が重要になります。
では、ここでまとめます。
近未来において、私がこの...。
WindowsやSurfaceの最近の機能から見ると、AIエディターの進化は自然言語によるコミュニケーションに収斂していこうとしているように思います。つまり、難しくなりすぎたものを反動として、もっと優しくする方向に進んでいるということですよね。自然に。
言語からAIが意図を読み取るということは、コマンドや記号設定、外部機能などをユーザーに見せる必要がないということです。
次にあるのは、いわば以心伝心です。操作履歴やコンテキスト、チャット履歴、参照ファイル、あるいはコードベースから、人の意図や次の操作を予測する能力をさらに磨いていくでしょう。
モデルの性能向上でこれがさらに磨かれるのではないでしょうか。
まあ、昨日出ましたよね。
クロード3.7、クロードのバージョンのようなものです。
ええ、ソネットとかですね。
あの辺によってまた磨きがかかるんじゃないかなということで、使えば使うほどAIと人間がお互いの気持ちを理解し、ハッピーな未来に向かって進んでいくんじゃないかなというのが、私の近未来の予測です。今日はその画についてですが。
直接お会いできなかったのは残念ですが、一応こんなお話をしようと準備してきました。最後にちょっとお声がけです。
AIデータのユーザー会をやりませんか？というお誘いです。
いろんな勉強会はあると思いますが、AIエディターに特化したものはあまりないと思います。カーソルやウィンドサーフ、クラインなど、他のツールについても集まって情報共有できる場ができたらと思っています。
なので。
興味のある方は私のツイッターアカウントにコメントを送っていただければと思います。長くなりましたが、最後までご清聴ありがとうございました。
北さん、ありがとうございました。
皆様、大変恐縮ですが、先ほど木下さんもおっしゃったように、少し時間が押しておりますので、この後は相談者のご経歴の紹介を省略し、所属の紹介のみとさせていただきます。大変申し訳ございません。
え？それでは、続いて…
次のセクションに参りたいと思います。
続いては、「AIコーディングエージェントのコラボレーション開発」と題して河北正明様にご発表いただきます。それではよろしくお願いいたします。
みなさん、こんばんは。MKと申します。
MKこと川北正幸と申します。
ええと、時間の関係でプロフィール紹介が割愛されたと思いますが、急に誰だという感じかもしれません。MKというものです。
はい、今日はキノピーさんや私さんが話していたAIコーディングエージェントの素晴らしさについて少しお話しさせていただきます。
たくさんのエージェントがあって、今この下の方にですね。
ここにいくつか並べさせていただいています。
すみません。
そうですね、ここら辺のものが有名どころです。
製品になってくると思います。
皆さんはこれらをどれくらい知っていますか？
というところですね。これがちょっとオープニングですが。
そうですね。
では、一旦自己紹介をさせていただきます。プロフィール紹介は割愛しましたが、ツイッター、XではMKとして活動しています。
はい、プロフィールですが、システムエンジニアとして皆さんと同じような形で活動しており、LLM関連の研究も行っています。
特にジェイルブレーキングやAIST、そして出力性能の最大化に注力しています。
そういったことを研究しています。
それから、AIツールを使って、小さなプロダクトを作っています。
カーソルやウィンドサーフ、ボルトなどを使っています。アンソロピックは特に好きなモデルです。最近の取り組みとしては、マートロピックのコンスティテューショナルクラシファイに取り組んでいます。
そういったことをやっています。ここはあるレベルでの話です。
すみません、レベル4までです。それって事故じゃないですか？
私はレベル4まではクリアしましたが、日本でレベル5をクリアした方がいれば、ぜひコミュニケーションを取りたいと思っています。世界でクリアしたのは7人しかいなくて、そのうち2人は知り合いです。
以上です。
あ、知ってるんですね。あと5人は誰なんでしょう。
誰なのか気になっていて、日本にいたら嬉しいなと思っています。それでお話しさせていただきました。
で、レベル4には40人います。
まあ、クリアしています。ニーズがあれば、私が行ったジェイルブレーキング手法についても解説しようと思っています。はい、また別の機会に。
では、早速本題に入らせていただきます。
はい、ではいきなり始めましょう。
出てきたのは、オフィスでのAさんとIさんの会話です。
ということで、これを模擬的に書かせていただきました。で、え？
営業担当のアイさんについてですね。
いや、最近AさんがSNSで2025年はエージェントへの投資だとかいう投稿がバズっているのを見かけたけど、あれ？
あれ？何か知ってるの？で、えっと、エンジニアのAさんはですね。
変わり？その辺詳しくて。そうね。今エンジニア。海外は特にコーディングに強いAIエージェントの話で持ちきりのようで。
ええ、ソースコード生成からテストやドキュメント生成まで、多くのタスクがAIによって自動化されつつあります。
ありますよね。で、そうなんだ、エージェントに強いAIエージェントって、例えばGitHub Copilotとかかな。それは聞いたことあるよとAさんが言ってます。GitHub Copilotも今となっては、AIコーディングエージェントの一種として考えられています。
でも間違ってはいないと。先ほどの方田さんの話でも、GitHub Copilotにはエージェントモードやエディターモードがあるので、AIエージェントとして考えても問題ないです。でも、他にもいろいろな種類があります。
特定の分野だけでも、十個以上のツールがありますよ。
で、え。
有名どころだけでも十個以上あります。それぞれ何が違うのでしょうか？
で、まあ、すごく関心があるのね。そうだね。
最近、社内に導入したMKボットというAIコーディングエージェントについてです。エムケーボットを使っています。
AIコーディングエージェントについて調べてもらおうと思っています。この会話をちょっと書き留めています。
はい、で、先ほどのことですが…
本田さんのプレゼンテーションにもありましたが、今かなり多くの…
AIエージェントが乱立していて、どれかを決めるのは難しいというのはおっしゃる通りだと思います。その中でも、エージェントの中には…
それぞれに特徴や特色があり、タスクによって向き不向きがあります。
そして、他には何を？失礼しました。
どこまで自動化できるかという点もあります。
コロナ禍で利用できるツールによってですね。
大きく異なるという特徴があります。
例えば、この縦軸と横軸を使って、まず製品の思想を分類することができます。
得意領域として、例えば製品の思想はノーコード志向です。
先ほどエージェンティックという全自動化を目指すアプローチがありましたが、一方で開発効率の向上やエディターの拡張を目指す視点もあります。これらが異なる切り口です。
さらに、UIに注力し、フロントエンド開発に強いエージェントがあります。
サービス面もあります。そして、LogicQuestはバックエンドのロジックに強く、開発向けのものです。それぞれに強みがあります。
得意領域がより明確になってきます。
開発規模と対応可能領域についてですが、先ほどウィンドサーフが言及されました。これは大規模です。コードベースを理解するために、先ほどキノピーさんが紹介されたMQueryがありますが、これはウィンドサーフに関連しています。
特に大規模なプロジェクトでは、ソースコードのファイル数が重要になります。
ソースコードの管理が非常に大きくなるので、大規模開発には特にウィンドサーフが適しています。
縦軸にはタスクがあり、上が汎用タスク型、下が特化タスク型となっています。
こういった切り口に応じて。
この切り口に基づいて、さまざまなプロットが作成できます。個人的には、適材適所でそれぞれを使うのが良いと思います。
それが良い使い方なのかなと思っています。
ええ、カーソルでは難しい領域でも、ウィンドサーフィンなら問題を解決できることがありますし、その逆も然りです。また、初期のプロトタイプを迅速に作りたい場合は、例えばvゼロやラバブルボルトを使うと良いでしょう。
また、自動化に関しては、開発が佳境に入っています。コードベースを作るよりも、自分で独自のロジックをゴリゴリ書いています。
補完が正確であれば、GitHub Copilotや最近出てきたクラウドコードを使うのが良いかもしれません。少しエージェント的かもしれませんが、適切に使い分けるのが良いと思います。
ここは少し細かいので割愛しますが、そのフェーズについてです。
要件。
一般的なシステム開発では、ウォーターフォール型で言うとV字モデルのようなものです。
そう思います。要件定義と計画から始まり、デザインとプロトタイプ開発、フロントエンドとバックエンドの開発が続きます。その後、テストがあり、単体テスト、結合テスト、UAT（ユーザー受け入れテスト）などがあります。そして、デプロイ、運用、保守運用が続きます。最近ではCI/CDも話題になっており、保守運用の中で継続的な改善があります。
それぞれの段階で、どのツールを使うべきかということですね。
それぞれの段階で最も効率的なツールについて、自分なりに整理しました。
各フェーズに応じて使い分けています。それを簡単にご紹介します。
すみません、後でまた続けますね。
資料は後で配布します。それでは、AさんとIさんの会話に戻りましょう。なるほど、AIコーディングエージェントには得意な領域があるんですね。
得意領域やできることが結構違うんですね。そうですね。
開発工程やタスクの内容に応じて、最適なAIエージェントを採用し、組み合わせて使っていくことが業務効率化の鍵になると思います。
なるほど、そういうことなんですね。あれ？AIエージェントを組み合わせて使うことってできるんですか？それに、一つのエージェントで開発したソースコードは、そのAIエージェントの中でしか使えないんですか？
管理できないものだと思っていました。
営業の人たちはそう言っています。
まあ確かに。そう言う人もいますね。
AIコーディングエージェントサービスもありますが、大半はGitHubなどのリポジトリ、つまりgitのホスティングサービスです。
あとはgitなどのバージョン管理システムを使って、AIエージェント間で共同開発も実質的に可能です。なるほど、AIコーディングエージェント同士でコラボレーション開発ができるということですね。それで、コラボレーション開発という言葉についてですが...。
ただ言いたかっただけですね。
では、次のページでは、現在私のプロジェクトで取り入れていることについてお話しします。
MKボットから推奨された方法です。まあ、私ですね。
から、えっと...。
実際に今運用している方法をご紹介させていただきます。
で、いくつかアイアンエージェントやコーディングツールがあるんですけど、私がよく使っている組み合わせはこういった製品群です。
まずは、各AIコーディングエージェント同士の関係についてです。
ソースコード連携をしていくというところで組み立てていくわけですが、一番最初のとっかかりは、UIやデザインに強いvゼロを使います。ここで最初に初期のUIデザインを作成し、それをソースコードに落とし込みます。
ローカル環境にダウンロードします。
ソースコードをローカルにダウンロードした後、Claudeを使います。
こちらの3.7が昨日リリースされたと思います。Sonnet 3.7を使って、デザインファイルをHTMLファイルに変換し、それをダウンロードします。
それをまたローカルに戻します。ソースコードをチャットに直接貼り付けてもいいのですが、実はLlamaを使うと...。
VS Codeとも連携していて、自分の作ったファイルをアップロードすることができます。これについては後でお見せします。
その後、Llamaから作成したものを取り出すことができます。
それをLiquidのリモートリポジトリにプッシュします。
それから、リポジトリをクローンして、Bolt、特にBolt Newに移動します。
Bolt to GitHubというのもあるので、そこにクローンしてBoltに移動します。
それで、Boltで編集したものはこちらです。
GitHubとは双方向で同期していないので、まずそれをダウンロードしてソースコードをローカルに持ってきます。それをローカルのリポジトリにコミットして管理します。その後、コロナのソースコードをカーソルで扱います。
クロードコードと連携し、適材適所で強みを活かせるところにタスクを任せています。
さらに、リモートリポジトリと連携できるものとしてデビンがあります。クロードもGitHubと連携できるようになりましたし、MCPを使えばGitHubのリモートリポジトリと連携して作業できます。
そういうことができます。
はい、そしてこのローカルリポジトリは当然リモートリポジトリとして使用できます。
ソースコードを指定すると、それがリモートリポジトリのオリジンとして機能します。
リポジトリを指定すると、こういうことができます。では、何ができるのでしょうか。
つまり、コラボレーション開発に関してですが、先ほど申し上げたように、私はフロントエンドやデザインが得意です。ですので、フロントエンド中心の開発が一つのポイントです。
このブランチに対して、Aブランチで、ライバルとして。
おすすめします。テラバブルは、ギター部と一緒にですね。
双方向の連携同期が可能です。次に、メインブランチから「Vault to GitHub」という拡張機能を紹介します。これをダウンロードして、Vault側でロジックを実装します。これはソースコードに関することです。
ダウンロードして、ローカルリポジトリにコミットします。まあ、さっきと同じですね。
それから、コロナのソースコードをカーソルディスクウォーインスタッフに移動して、それからクロードコードに移動します。
それぞれですね。
まあ、詰まったら、何かね。
Windowsサーフを使ったり、カーソルを使ったり、クロードコードに分析してもらってバグを取り除いてもらったりします。そして、もちろんフィーチャーも。
あの機能ですね。
新しい機能を作るというのは、それぞれのエージェントに自律的に任せて、作ってもらったものをブランチに統合します。
コミットしてプッシュします。すると、リモートブランチにいくつかのフィーチャーブランチができます。
そして、この中で登場してくるのは...。
え？今度はデビンが登場します。
まあ、それぞれのブランチに対して、いくつかを除いて内容を確認します。
まあ、チェックするのもいいですし、メインブランチに対してプルリクエストを出してください。
それから、Aブランチ、Bブランチ、Cブランチの変更がコンフリクトを起こしていないかチェックしてください。CIの自動テストはデビンが担当しています。そして、問題がないことをデビンが確認します。
お墨付きをもらったら、それらを進めてください。
メインブランチにプルリクエストを作成してもらって、あとは私がそれをポチっとマージするだけです。
もちろん、クロードも...。
最近、特にクロードに関しては、各ブランチに対してソースコードレビューを行っています。
3.7は非常に強力なので、MCPと連携しています。
それぞれのブランチを確認しています。
最近の変更やコミット内容を確認しています。
ファイルの中身を確認して問題がないかをクロードに見てもらいます。バグがあれば修正し、改善点があれば指摘してもらいます。
それぞれにコメントを書いてレビューを経て、デビンがCI/CD的なことを行います。エージェントを並行して動かしています。
例えば、ここではログイン機能を作りたいとか、ここでは決済機能を作りたいといった感じです。
ここはSPAベースでやっています。連携が比較的しやすいのが利点です。
ラバブルとボルトは連携しやすいです。作りながら、今度はカーソルWindowsハーフ用のダッシュボードを作りたいです。
並行して、こちらで作成した新しいブランチに対してレビューを行い、DevinでCIを実行したり、プルリクエストを作成したり、自動でGUIベースのテストを行ったりしています。
はい。先ほどご紹介したボルトへのGitHubリポジトリの取り込み方法について、今こちらに書いていますが、実際に画面をお見せした方がわかりやすいかと思います。
すみません、これではないですね。
えっと、こちらにですね...。
拡張機能として、ボルト・ツー・ギットハブというのがあります。ここでボタンをポチッと押すと。
リキッドからリポジトリをインポートできます。
それが自動的に読み込まれて、ここに入ってきます。
はい、そこから開発を続けることができます。
なかなか便利だなと思っています。
はい。
あ、ここはインストールが少し長いんで。はい。で、まあ、そういうのがあります。注意点として、この拡張機能でGitHubと連携しても、実質的には...。
まあ、GitHubは双方向連携を行っていないので、そこは注意が必要です。
一旦クローンして、ローカルにダウンロードしてから、ローカルリポジトリからプッシュする必要があります。
まあ、これはもうやったので飛ばしましょう。次に行きます。
次は、Llamaの方ですね。
Llamaでは、ソースコードがいじれないじゃん、みたいなことが一時期ありましたね。特にXとかで。でも、確かにおっしゃる通りだなと思いました。
僕もLlamaをたまに使うんですが、いじれないのは不便だなと思っています。それで、ちょっといろいろいじってみました。
一旦GitHubに登録すれば、その後右側のオプションにアクセスできます。
Edit VS Codeというものがあります。
それをやると、VS Codeが開きます。
これは皆さんにとって見慣れた画面だと思います。ここでは、いつものExplorerペインやメニューがあり、簡単に編集ができます。例えば、READMEファイルを編集することもできます。
間違えて何かを消してしまうこともあります。
もちろん、削除することもできますし、ここでアップロードもできます。また、ドラッグアンドドロップでこのエリアにファイルを入れることもできます。
つまり、ここですべてを総入れ替えすることもできるわけです。
これを全部一気に消して、別の場所で作ったものをこれっぽいと言うことができます。
そういうこともできます。
で、ここでGitでプッシュすれば、Loveableと連携しているので、GitHubリポジトリと連携でき、そのリポジトリにプッシュされます。
という形です。そして、そのあたりで...。
画面に戻りましょう。
最新のコミット内容が読み込まれて、開発を続行できます。
そういうやり方があります。
はい、このような形で、少し連携していくことが可能です。
で、ちょっと今説明させていただきました。で、またAさんとIさんの会話の続きですね。様々なAIコーディングエージェントのサービスツールがGitHubとかで連携できるというのがよくわかりました。ソーネット、すべて。本当はすべてのサービスが。
GitHubと、まあネイティブでですね。
双方向で連携できるようにしてくれれば、もっと良いですね。
開発は効率化するんだけどね。っていうのは、Aさんが言ってますよ。
私もちょっと持ってます。で、今は対応しないけど、エージェントサービスとですね。
ソースコードの動機を取るのに、ひと手間かかっているんですよね。
理解しました。でも、これほどのAIだと...。
コーディングエージェントがあると、ドルとドルを契約すべきなんですね。迷ってしまいますね。そして、サービスもサブスクです。
月額とか年額の契約だと、いくつも契約したら月々の出費がすごいことになりそうだと私も思っています。
確かに悩ましいところですね。デビンもそう思っているようです。
まあ、月額500ドルですからね。日本円で7万5千円です。
僕の給料ではとても払えない額です。でも、そこで朗報がありました。
そういう反応になるのはよくわかります。でも安心してください。世界中に同じようなことを考えている人がいて、それを投資として考えています。
彼らは集まってDevinをオープンソース化しようとしています。
ソースコードを公開して、誰でも無料で使えるようにする取り組みがあります。それを紹介しますね。それは朗報です。ただ、もちろんオープンソースとは言っても、APIの問題があります。
利用料金がサブスクリプションの500ドルや7万5千円を超えないように注意してくださいと言っています。
どちらが良いかを選べるようにSaaSとして提供しています。
月額定額がいいのか、自分で管理するのがいいのか選べます。
API料金でやっていくのが良いか？コストをしっかりとシミュレーションする必要があります。
先ほど、ほうだしさんのプレゼンテーションでデビンをオープンソース化するという話がありましたが、それがオープンハンズです。オープンハンズは、デビンに触発されて作られた最も人気の高いオープンソースのAIエージェントの一つです。
もともとはオープンデミンという形で作られましたが、あまりに露骨すぎるということで名前が変更されました。
ということで、オープンハンズに変えられました。ソフトウェアエンジニア向けです。
AIエージェントでして、人間の開発者と同様にコードの編集など、デビンでできることはすべてできます。
編集時にコマンドを実行したり、ウェブを閲覧したりできます。
API呼び出しでできます。エージェントループも入っているので、ほぼデビンと同じような作りができます。
それができます。
なぜ？まあ、これです。
オープンソースなので、自立型エージェントの実装やエージェントループの作り込みがどうなっているのか、コロナ禍のソースコードを解析することでわかります。
皆さんが開発しているサービスにも組み込むことができると考えています。
でも基本的にどこかで起動するので、安全性は確保します。ローカルのCLIツールを多用する場合、危険なことを始める人もいます。
はい、オープンハンズは2024年でも非常に活発です。毎日のようにプルリクエストやイシューが立てられています。私も少し関わっています。
ここをウォッチしていますが、みんなで活発に開発しています。だいぶ開発環境に近づいてきた印象です。
それで、2024年ですね。
シード資金を調達しました。
現在、ホスティングとバンドサービスを行っています。
ディファイって言うんですかね。
まあ、オープンソースですが、月額料金を払えばクラウド版のホスティングサービスとして利用できます。
サービスとして使えるんですね。オープンハンズも同様のことをやろうとしているみたいです。
はい、それで、電話の動画についてですが。ロッカーを起動すると少し遅いので、これがオープンハンズの画面です。そして、起動します。
まあ、これが。
今やっていることは、その、えっと。
あれですね。
モデルは自由に選べます。
アンソロピックとか、オープンAIとか。
ちょっとごめんなさい。これ早いですが。
ここでは、いろんなモデルを選べて、自分の好きなモデルを選びます。
で、まあ一旦OpenAIのo1かo3 Miniにしようかなとか。それから、クロード3.5とか。
まあ、まだ3.7には対応していないですけど。その後はGitHubですね。
GitHubを自分のリポジトリと連携して、表示できるようにします。そうすると、デビンと似たような画面が出てきます。
そうすると、プロジェクトの読み込みが始まります。その後、今連携しているリポジトリにフォーカスします。
ブランチの一覧を取得するようにお願いしたりします。
あとは、まあ、そうですね。
はい、リモートの現在のブランチをですね。
リモートにプッシュすることもできますし、当然Gitの操作も行います。そして、右側にウェブやブラウザ、アプリなどのオプションがありますが、コロナ禍でウェブサービスが重要になっています。
内部的に開いて、クリックして操作することができ、DevOpsと同じようなことができます。どんどん深く使いこなせます。
続いて、「オープンハンズ」の開発も生協によって行われています。
はい、このような無料のオープンソースコードもあります。そして、ボルトというものもあります。えっ？
ボルトも最近人気で話題になっていると思います。
実は、これも部分的にオープンソースになっているんです。ボルトDIYというものがあって、みんな趣味で楽しんでいます。もともとボルトのもので、コンポーネントが部分的に公開されています。
コメントやフラグメントのようなものが公開されて、そこからDIYを作っていくというコンセプトで始まったものです。ボルトのすべてが公開されているわけではありませんが、似たような形を模倣する形で始まりました。
はい、これはオープンソース化されています。そして、ローカルホストで立ち上げることもできます。
ということで、これはかなり...。
自由度の高いカスタマイズが可能です。
そして、使えます。BoltやBolt Newの場合は...。
ええ、ウェブブラウザの方ですか？えっと、サービス側では何を使っているんですか？
使用するモデルを指定しているので、3.7やソーネットを使いたいという選択はできませんでしたが、こちらのBolt DIYでは自由に選べます。また、ハブからインポートしたり、ローカルからアップロードすることもできます。
はい、これで終わりです。時間が押していますが...。
ボルトについてもですね...。
簡単なデモをお見せします。
はい、こんな感じでボルトを使っています。今、ローカルで起動していますが、ここで好きなモデルを選ぶことができます。
例えば、Geminiのモデルを選んで、2.0 Proにしようかなという感じで選びます。
はい、ここで開発することができます。
そして、もちろんGitHubからインポートして、私のレポートを処理することもできます。
私のレポート処理に接続しています。その後に、ええと。
起動すると、見慣れたVaultの画面がオープンソースで立ち上がります。ここで好きなようにモデルを切り替えることができます。もちろん、これはローカルで動かしています。
なので、使うのは自分のAPI費用ですね。
API利用料金がかかるので、サービスのクールな機能を利用した方がいいかもしれません。
自分のAPI利用料を払った方がいいのかどうか、コアな部分を見極める必要がありますね。はい、ということで。
以上がAIエージェントについてです。
こちらはコラボレーション開発に関する発表です。
長くなってしまい、すみません。ご清聴ありがとうございました。
はい。
青木田様、ありがとうございました。それでは、続いてのセッションに参りたいと思います。
画面は表示されていますか？
はい、では続いてはですね。
続いては、「AI駆動開発でサービスを量産している方法」と題しまして、株式会社アルファバイト代表取締役CEOの岩崎たい様にご発表いただきます。
こんばんは。
会場に入った瞬間に。
なんかクラブかなと思いました。でも、やっぱりサイバーさんなので、納得です。
結構焦りました。
かなりクラブっぽい感じだったので、今日はDJっぽい帽子を持ってきました。それをかぶりながらやろうかなと思います。
ちなみに、これ。
映りますかね？スライドいただけますか？
すみません。
はい。えっと、「生成AIでサービスをリリースしまくってる話」というタイトルで始めようかなと思います。
で、一番最初にちょっと自己紹介なんですけど。もともとシリコンバレーでスタートアップを創業して、そこの会社でCTOをやってました。その時はZ世代向けのメンタルヘルスのアプリを作ってました。
ワッフルジャーナルっていう名前で、交換日記を通じてメンタルヘルスをケアしていこうというものでした。でも、生成AIの流れがあまりにも楽しそうで、傍から見ていると、CTOを退任しました。そして、今は東京で別のスタートアップに関わっています。
で、今、ビルドインパブリックみたいな感じで月一プロダクトリリースやってます。その傍ら、技術顧問とか、AI顧問ってちょっと名前があれですけど、そういうこともやったりしてます。ちょうど先週からビルドインパブリックを盛り上げようという感じで、YouTubeを始めました。
YouTubeのチャンネルを始めたので、ぜひチェックしてみてください。
チャンネル登録よろしくお願いします。
いきなり宣伝してすみません。
どんなサービスを作っているかというと、ソロメーカードットデブというものです。まず、12月頃にプロダクトをリリースしました。開発には1〜2週間ほどかかりました。現在、約5万人のユーザーがいて、毎日5〜10個ほどのプロダクトが作られています。
生成AIを使ってどんどん開発してリリースしています。
ソロメーカーには数百ほどのプロダクトが登録されています。
個人開発がどんどん盛り上がってきていると感じています。その盛り上がりの理由はやはり...。
AIエージェントを使って開発速度が上がり、誰でも開発できるようになったことが影響していると思います。
生成AIで生成できるものは、コードやプロダクトだけでなく、もっと多くのものがあります。コードや言語に限らず、私が生成AIに興味を持ったのは、画像を生成するオープンソースの「ステイブルディフュージョン」から始まりました。
画像生成や動画、音声、声など、そういったものがどんどんすごいクオリティで生成されています。
こうしたものが生成できるようになって、多くの人がその生成の喜びを感じたことがあると思います。
自分で作りたい動画を生成できると、本当に感動します。
でも、コンシューマ向けのインターフェースはまだ全然整っていない状況です。
各モデルを簡単に使いやすくするサービスとして、映像ドットAIをリリースしました。
はい、その他にもアプリなどもあります。
結構量産していて、例えばGRWMやハビットマックス、モナなどがあります。
これらはすべて生成AIベースのツール、例えばエクスパリアクトネイプで作られています。裏側もほとんどAIが活用されています。
VLMやステーブルディフュージョンを使って画像のタグ付けなどをしています。
例えばGRWMでは、ユーザーが自分のファッションの自撮りをアップロードすると、LLMがそれを解析してファッションの改善点を提案してくれます。
言語入力に基づいて着せ替えができて、それを再評価することもできます。
そんな感じのアプリです。AIを使ってどんどん面白いものを作っていこうとしていて、開発をもっとエンターテイメント的に楽しくしようという企画を進めています。
月一リリースを支えるために、何度も登場している技術を使っています。例えば、BoltやCursorです。インフラはVercelで、バックエンドはSupabaseを使用しています。
最近では、そこにWindsurfも加わりました。
はい、流れとしてはまずBoltで作成します。
カーソルとWindsurfでローカルで整えて、それをVercelにデプロイします。
そんな感じです。
UIの実装については、あまり時間をかけすぎないようにしています。Radix UIなどを使って、できるだけ効率的に進めています。
最初の開発コストを下げるために、エラーハンドリングはSentryに任せています。
ここでは、費用対効果を考えつつ、最初はローンチを重視して、できるだけ早くリリースできるようなスタックを使って、SaaSをどんどん活用しています。
それが私たちの意思決定です。
はい、その流れです。先ほども言いましたが、まず構造を生成するのはBoltです。プロジェクトの立ち上げで一番時間がかかるのは...。
アーキテクチャの設計や、どのバージョンのNext.jsを使うかといったことです。
まあ、そんな感じですね。
ライブラリとかで、npmを使ってもいいんですけど、インストールするのが意外と面倒なんですよね。
自分の得意なボイラープレートを持っていない人にとっては、最初に数時間、遅い人だと数日かかることもありますが、Boltならだいたい...。
まあ、3分くらいで終わるので。
今は結構いいかなと思って使っています。
はい、これがBoltで。基本的な流れは先ほど紹介があったように同じです。プロンプトとマスターベースがここにあります。あ、最近これが追加されたんですね。
Supabaseと連携できる機能があります。
認証やバックエンドのスキーマ作成なども自動でやってくれます。そして、デプロイも一応できます。
そのままです。ただ、あまりうまくいきません。選択肢は結構あります。
はい。開発はどんな感じかというと、すべてBoltで生成されます。
まあ、そのサービスのUIやバックエンドの構成を、そのまま100%例の通りにリリースすることはできません。こんな感じです。
最初はプロンプトで頑張っても、UIとしては40点くらいなんですよね。だから、そこからは結構自分でやらないといけません。
改善していく必要があるかなと思います。12月の段階では、ボルトだけでは完成できません。
そこからカーソルを使っていくんですが、昔のワークフローだと、デザイナーがいて、エンジニアがいて、フロントエンドとバックエンドがいて、まるで重戦車のような感じでした。
そうですね。
数ヶ月かかるようなプロジェクトも、デザインプロセスを無視すればFigmaもプロトタイプ作成ツールも必要ありません。基本的なワークフローは、テキストからコードに変換してUIを整えることです。
そこでスクラップアンドビルドが本当に活きてきます。
スピードが出せるので、最初は怖がらずにフロントエンドで壊しては作ってを繰り返すと良いです。フロントエンドとデザインの両方ができるエンジニアは少ないですが、だいたいフロントエンドが...。
得意な人なら、一ヶ月くらいやっていれば慣れてくるワークフローだと思います。
自分で研究したり、エンジニアとしてデザインを勉強するのにちょうど良いです。最終的には、徹底的に模倣すること、つまり「tttp」が正解だという結論に至りがちです。
このデザインがどのように設計されているのか、そして...。
カードUIのような要素を取り払った方が、実はこういうUIが適切だという結論に至ることがあります。
まあ、だいたいそんな感じですね。
ノートも同じようなUIになっていて、ソロメーカーと同じUIになっています。
CCAです。
AI駆動開発のようなものですね。それだけではサービスリリースまではもちろんいけませんが、ソフトウェアエンジニアとして最低限理解しておくべきことが、ここに挙げたものなどです。
まあ、これでさえも本当に一部ですが、最低限これくらいは理解して、どういうものなのかを把握し、それをAIに適切に伝えて、生成されたコードのレビューを自分で行う必要があります。それが現状です。
で、もちろん自然言語プログラミングが大きなトレンドではありますが、やはりその...。
どうしても量が必要なコードがあって、難しくはないけどAIの方が早いコードがあります。例えば、Googleでは、これがかなり議論の余地がありますが、AIがすでに25%のコードを書いていると言われています。
ただし、ええと...。
早いからといって良いわけではありません。もちろん、コードの生成は非常に高速になりましたが、それが高品質かと言われると、そうではありません。それをどうやって向上させるかは、やはり使い方次第です。
えっと、まあ、ボルトには限界があります。
最初の立ち上げは結構簡単にできるんですが、その後は...。
リリース可能なレベルまで引き上げるには、カーソルプラスと人間の手が必要です。
まあ、知恵みたいなものですね。今までは、人間がアーキテクチャをどうするかとか、コードをどう書くかとか、細かいところで重要だったんですけど、どちらかというと、シフトすべきところはQA能力とかですかね。実際に自分で作ることが...。
...自分で作っているものを補足として。
使ってみて、たくさんの課題をGitHubに上げて、それをAIに解決させる。テストなども含めて。
QAの能力はやはり人間の方が早くて正確なので、それを言語化することがかなり重要だと思います。
はい。今後、これまで普通のソフトウェアを書くことに使っていた時間が、どんどん別のことに使われていくのは間違いないですね。
細かいコードを書くのはAIに任せて、人間は他の作業に集中する。
そうですね。
これからどのようにワークフローを組んでいくのか？AIエージェントの設計や、ノーコードを普通のコードに変換する部分などですね。
はい、最初からデビンなどと協業する前提で、どのようなチーム構成で進めていくかを考えることが重要だと思います。
はい、以上です。
ありがとうございました。
こんにちは。
はい、ええ、ここでですね。本日、お祭りということで、皆様から見て右手側にですね。
入口付近にお飲み物と軽食をご用意しておりますので、聞きながらで結構ですので、お取りいただいて、食べたり飲んだりしていただければと思います。
各地。
そうですね。
お知らせいただければと思います。
それでは、この時間を使って次の登壇の準備を進めさせていただきたいと思います。
はい、今、会場で。
皆様がお飲み物を取っている間にお時間がありますので、次の登壇者をご紹介させていただければと思います。
続いての登壇者は...。
「カーソルかけるNCPで実現するAIアシスタントの拡張機能」と題しまして、弊社のAIオペレーション室エンジニア、イジュンホさんにご発表いただきます。ジョンホさんは...。
彼は全社的なAI活用戦略を推進するテクノロジーリーダーであり、生成AI活用コンサルティングの第一人者として、数々のプロジェクトを成功に導いてきました。また、ディファイコミュニティミートアップジャパンにも関わっています。
運営を通じて、日本のAIコミュニティの発展にも貢献されています。
では、ジョンホさん、ご準備をお願いいたします。
ベース、もう始めていいよ。
えっと、皆さん、こんばんは。
えっと、皆さん、こんばんは。AIコードエージェンツ祭り2025年ウィンターへようこそ。今日は、カーソルかけるMMCPで実現するAIアシスタント拡張機能についてお話しします。サイバーエージェントの順がお届けします。よろしくお願いします。
えっと、今すごく緊張していますが、えっと、グンダさんが...。
とは？えっと、スカイネットを活用できるということで、今回はスカイテントについてお話ししたいと思います。
よろしくお願いします。
よいしょ。えっと、アジェンダなんですけど、このようになっています。まず自己紹介と結論です。AIアシスト機能を活用することで、まあ、あらゆることが可能になります。
業務効率化できるということを紹介します。
その理由は、AIの知識が人間を超えているからです。その超えているAIの知識を使って、専門家になれるということです。
専門家の知識を活用して価値あるAIエージェントを作ることで、業務効率化が図れるということと、実際の導入事例についてもお話しします。
八代事例として二つ用意しています。一つはドキュメント検索機能の拡張例、もう一つはリサーチ機能の拡張例です。最後にまとめを行います。よろしくお願いします。
まずは自己紹介です。
名前は順方ですが、李さんと呼ばれることが多いので、順というあだ名にしています。所属はサイバーエージェントのAIオペレーション室です。
業務内容としては、生成AIを活用しています。
全社の業務効率化、標準化、自動化を推進しています。一方で、先生...。
活用して、コンサルタントやアドバイスを行い、こういうことができるという提案もしています。サイバーエージェントでは、ネクスパートとして生成AIでどんなことができるかを示しています。
これを導入すれば、あなたの業務を効率化できるということをしています。TwitterやXでも活動しており、バーディピアでQRコードを読み込んでフォローしていただけると嬉しいです。
右側のQRコードは、ディーファイミートアップ東京のものです。このコミュニティでは、ディーファイと生成AIを使って効率化を図る活動をしています。ぜひご参加ください。
結論から始めます。
よいしょ。
AIアシスタントを運用することで、今日も効率化できますよ。
それを一つの例で表しています。
これ、何をしているの？
というと、AIエージェントですね。
まあ、自律的に行動します。それで、自律と協調を考えると、例えば…
社内ドキュメントを削除する必要がある場合、地理的な観点を考慮して、エムシーピーサーバーで問い合わせを行います。
で、その問い合わせをして、えっと、ナレッジから…
社内ドキュメントを参照して、それを返します。
で、下の例がこちらです。
例えば、AIエージェントがウェブ検索や他の機能を使う必要があると自立的に判断した場合、グーグル検索やパワープレックスといったツールを使って、エージェントが自立的に判断し、それに基づいて回答します。
以上です。
より具体的に言うと、例えばカーソルプロンプトを使って、自社製品、例えばAE製品について競合分析をするという具体的なタスクを与えます。そうすると、このAIエージェントは自律的に考えます。
商品情報の詳細を取得するために、ナレッジや社内データソースを利用します。
問い合わせをして、結果を取得する位置を自律的に変えることを考えます。
Mシップサーバーを通じてナレッジデータを取得します。
次に、競合分析のタスクを考えます。他社の強みや弱みを分析する必要がある理由を考えます。
そして、その結果です。
提供しているツール、例えばパプレやグーグル検索機能を自律的に考えて、MCPサーバーに投影し、その結果を取得して、それに基づいて競合分析を行いました。
AIエージェントが判断して、カーソルをその方向に誘導する流れになります。
つまり、あなたの業務の課題はAIエージェントで解決できます。そう思う理由は...。
次の理由です。
AIの知識は人間を超えています。この図は昨年9月のもので、AI構築に関する7つのタスクの試験結果を示しています。
これは正解率を追跡したものです。左から見ると、わかりますが...。
もう少し右に行くと、ChatGPT-3が出てきて、それを上回っています。そして3.5に移ります。ここでいう「エキスパート」は博士レベルに相当します。90点近くに達して、次がo1です。
これは昨年の8月か9月頃ですね。
専門家レベルを上回っています。それで、えっと。
2025年には大杉ミニが出て、マスト...。
それで、専門家レベルを超えているんです。これで、AIを使って何ができるかというと...。
エージェントを作ることができるかなと思います。で、一番上から説明しますと、まずレベル1のチャットボットです。平たく言えば、チャットGPTだと思ってもらった方がいいです。
継続的なチャット型の対話をして、チャットボットと壁打ちして、高解像度のアウトプットを得る感じです。
それがレベル1です。
レベル2は専門家レベルで、高度な課題が解決できるタイプのものです。レベル3はですね。
専門家のレベルを使って。
タスクを与えると、自律的に複雑なタスクを最初から最後まで完結して解決するタイプです。
今年はAIエージェント関連なので、そういうことができるかなと思います。
えっと、自己紹介になります。
この事例は、ドキュメント検索機能を拡張した例です。簡単に言うと、カーソルでこのドキュメントを探してと言うと、AIエージェントがユーザーのプロンプトや命令を理解して、自律的に考え、MCPサーバー、具体的にはDeepAIのMCサーバーにアクセスします。
結果を持ってきます。より具体的に言うと、例えば、
エンジニアは、例えばAPI仕様書を探すことがあります。
社内ドキュメントを参照する必要があるかもしれません。
カーソルで探してくださいとか、このAPIの呼び出し方を探してくださいとプロンプトに入力します。すると、AIエージェントが自律的にAPIコールの方法を考えます。
APIの仕様書などを。
各種していないので、どうするかというと、MCPサーバーを使います。
提供されているツールを利用します。ここで、MCPサーバーはT-Pieでナレッジ機能を提供しており、この機能を使って社内のドキュメントを取得します。
そして、ベクトル検索などを通じてドキュメントを取得します。
それをカーソルに返し、そのカーソルが基づいて回答するという流れになります。
ここで、先ほどディファイでMCPサーバーを運用するという話をしましたが、ディファイとは何かというと、非エンジニアでもノーコードで簡単にアプリケーションを作成できるプラットフォームです。
それができるプラットフォームです。
作ったアプリとしては以下の通りです。まず、カーソルでプロンプトが入力されると、ドキュメントを探します。そして、二番目に実際のドキュメントを探して、三番目に
見つかった結果をまとめます。
四番目に、そのドキュメントの内容を返します。これをノーコードで簡単に作成できます。
結果はこのようになっています。ツールを利用することで、MCPやDeepEye MCPサーバーを使って要件を満たすことができます。
ラムダの責任共有モデルについて教えて、と質問すると...。
ユーザーの意図を汲み取って、まずMCPサーバーを使用します。キーワード検索が必要なので、キーワード選定はすべてAISが決定します。決定して問い合わせを行った結果、レスポンスが返ってきます。そして三番目に、それに基づいてこのドキュメンタリーがドキュメントになります。
それが教えてくれることです。
そういう流れになります。
で、次の事例がこちらです。
リサーチ機能の拡張の例です。先ほどの流れと同じですが、まずリサーチ内容を入力します。
リサーチ内容で言うと、例えば競合の分析や他社の事例の分析ですね。それを分析するとなると、地理的に行動することになります。それで、
他社の事例を取得するためには、LLM自体がまだこれらの事例を学習していないので、ウェブで検索する必要があると気づきます。そして、その気づきから、どのようなツールが使えるかを調べると、MCPサーバーが見つかります。
DeepAIでは、PerplexityやGoogle、ウェブサーフィン機能を提供していることに気づきます。それを利用することになります。
それを利用して検索結果を取得します。
そのデータをカーソルに渡すと、カーソルが分析結果をまとめてアウトプットを出します。
という流れになります。具体的には、あの。
えっと、ティーパイで言うと、そうですね。
あ、先ほどの検索。
他社の事例を競合分析するためにウェブ検索が必要と言いましたが、TIを使えばそれが簡単に量産できます。
ここで言うと、ウェブ検索機能ですね。
ウェブ検索の、この緑枠のやつです。
えっと、ウェブ検索機能なんですけど、T-Fiを使えば簡単に作れます。「簡単に」というのは、誰でもできるという意味で、非エンジニアでもノードとノードをつなぐだけで、マウスをポチポチするだけで簡単に作ることが可能です。
まあ、そういうメリットがあるツールですね。
で、結果はこのようになっています。ツールを利用することで、こうなります。
「この内容について調べてください」となると、
MCPサーバーで、APIを呼び出すためにどの引数やパラメーターを渡せばいいのかをAIが自律的に判断しました。そして、「AI活用事例」というキーワードを選定し、それをMCPサーバーのAPIに使用しました。
お待たせします。
問い合わせの結果、リサーチの結果をウェブ検索して取得し、その結果に基づいて出力を生成するという流れになります。
この事例を踏まえて、私が言いたいのはですね。
MCPサーバーを増やすことはできるんですが、増やすことで開発やサーバー運用がかなり必要になってきます。
こういうことは結構面倒だと思うんです。じゃあどうするかというと、解決策としてはTifyだけを使うことです。MCPサーバーを接続して、Tify内でアプリを量産します。
先ほど、リサーチやウェブ検索機能について話しましたね。
アプリケーションを作成して、Deepaiと連携します。
または、社内データやドキュメントを集めるために、RAG機能を持つアプリケーションを作成し、ディビジョンで開発してMCPサーバーを提供します。つまり、MCPサーバーを通じてDeepaiを提供すれば、カーソルやエージェント経由で簡単に利用できるということです。
では、最後にまとめますが、AIエージェントの知識は人間を超えています。この人間の知識を超える専門家レベルの知識を持つAIを活用して...。
AIエージェントを使うことで、先ほど述べた業務効率化ができると思います。
地霊として二つのポイントを説明しました。ドキュメント検索とリサーチ機能の例を話しました。そして、最後に...。
DeepSeekを活用することで、AIは簡単に結果を量産できるので、おすすめしたいと思います。
非エンジニアでも簡単に使えるので、かなりおすすめです。以上です。
ご清聴ありがとうございました。
発表ありがとうございました。それでは、次のフィクションに参りたいと思います。
続いては、「メモ管理はObsidianとCursorが最強」と題して、弊社AI事業本部オペレーションテクノロジーディビジョンのWebフロントエンジニア、山口たやさんにご発表いただきます。それではよろしくお願いします。
はい、それでは発表を始めさせていただきます。
はい、みなさんこんにちは。今日は、えっと。
「メモ管理はObsidianとCursorが最強」というテーマでお話しさせていただきます。よろしくお願いします。
ええと、簡単に自己紹介をします。
ええと、山口太陽と申します。サイバーエージェントのAI事業本部所属の新卒エンジニアです。
効率化が好きで、VimやCursor、Obsidianなどが好きです。
ぜひフォローよろしくお願いします。
早速今日のテーマの結論に入りますが、今回の結論は、メモ管理とAIツールの相性がとても良いということです。
メモとAIを組み合わせることで、生産性を大幅に向上させることができます。
これだけ覚えてくれたら今日の目的は達成です。具体的な話に入る前に、メモについて簡単にお話ししたいと思います。
皆さんはメモを取っていますか？
メモを取ることは多くの人がやっていると思いますが、取っただけで満足していませんか？
一時的なメモを除けば、多くのメモは書いただけではあまり意味がありません。
メモは見返してアウトプットして初めて価値が生まれます。
今日は、メモを見返してアウトプットするための具体的な方法を紹介します。
もう少しメモについてお話しすると、メモには思考の整理やアイデアの増幅、知識の蓄積や共有ができるというメリットがあります。
一方で、メモを書くのに時間と手間がかかることがあります。どこに書いたか忘れて探すのに手間取ることも多く、そのため一時的なメモしか取らなかったり、振り返らない人が非常に多いです。
しかし、これは非常にもったいないことです。
そして、これを解決できる手段が今の時代に登場しました。それがオブシディアンとカーソルの組み合わせです。
僕はこれをオブシディアンインカーソルと呼んでいるので、これからこの言い方でいきたいと思います。
オブシディアンを知らない方もいると思うので、軽く説明させていただきます。
オブシディアンは高機能なマークダウンエディターで、ローカルファーストで動作します。ローカルにファイルを保存でき、プラグインで機能を拡張できるため、非常に自由度の高いメモツールです。
UIはこんな感じです。少し小さくて申し訳ないんですが、ここで…
メモを変更したり、機能を実装したり、実行したりすることができます。
これと先ほど出ていたカーソルを組み合わせることで、以下のことを実現できます。
Obsidianの機能とAIによるタグ生成により、メモへのアクセスが非常に速くなります。一時的なメモにとどまらず、アウトプットを出せるようになります。
これからこの二つについて説明したいと思います。
ここからはメモへのアクセスについて具体的に説明します。
メモへのアクセスを爆速にする方法は、タグをつけることです。
なぜタグ付けが良いのかを説明したいと思います。
前提として、メモの分類方法は大きく3種類あります。フォルダで管理する方法、タグで管理する方法、そして分類しない方法です。今回は、タグで管理する方法について話します。
タグには素晴らしい点があります。タグを付けることで関連性が明確になります。
すごいのは、特定しやすくなることです。
Obsidianには、タグをグラフで表示できる機能があります。これを使うと、どのタグがどのファイルと結びついているかが一目でわかります。
さらに、タグを付けることでメモへのアクセスが非常に速くなるというメリットもあります。
これにより、より正確な検索が可能になり、検索速度が速くなります。結果として、アクセス速度が向上します。特にObsidianの文脈では、タグ付けさえすれば、メモへのアクセスが非常に速くなることが、この二点からわかると思います。
ただし、大きなデメリットがあります。
タグ付けは非常に面倒です。
手動でやったことがある人ならわかります。
そう思いますが、これは継続してできるものではありません。
ただし、先ほど紹介したオブシディアンインカーサーを使えば、この問題を解決できます。
ここから具体的な話になりますが、カーソルエージェントは非常に優秀です。メモの内容に基づいて適切なタグを自動で付けてくれます。
なので、こちらが行うのはある程度のルールを設けることだけです。
私が設けているルールは、一貫性のある命名、タグの種類の制限、タグの個数制限です。これらを行うことで、タグを活用して無理なく運用することができます。
あとはカーソルエージェントにタグをつけてくださいと指示するだけで、適切なタグをつけてくれます。
くれます。
今回はこの具体例では、この発表の原稿をObsidianに書いていたので、このObsidianのメモに対してカーソルエージェントにタグをつけてもらいました。
結果として、Obsidian、Cursor、プレゼンテーション、メモ管理、Productivityといったタグがつきました。
発表にあったタグがついているので、精度も申し分ないと思います。
非常に実践しやすい内容になっているので、ぜひお試しください。
ええ、これが2つ目です。最後に、アウトプットについてお話できればと思います。
アウトプットするためには、まずインプットを充実させる必要があります。そこで、インプットの方法を軽く紹介します。
私はいろんなインプット方法をとっていて、LINEを使って目を通したり、Kindleからメモを取ったりしています。一番多く使っているのは、部長のコンテンツをクリックすることです。
今回は技術的な会なので、技術の内容についてまとめてノートを作ります。
そういったアウトプットをご紹介できればと思います。
使う技術は、UITハブオブシディアン、ウェイブクリッパーカー、ソルオブシディアンです。
具体的に説明します。
えっと、まとめたいです。ノートをまとめるノートを作りたいです。リポジトリを探します。
リポジトリを見つけたら、GitHubのURLのGをUに変えてください。
こうすることで、「uitハブ」というツールを使うことができます。
これをuitハブでテキスト化して、オブシディアンに保存するという流れで、オブシディアンにローカル保存します。
ここからは簡単で、まとめノートに欲しい要素をプロンプトに基準するだけです。
今回は、技術スタックの環境構築方法とシーケンス図を書くための機能の構造が欲しかったので、カーソルエージェントにそれを出力するようにお願いしました。
これが出力されたまとめノートです。
えっと、少し小さくて見にくいんですが、技術スタックがフロントエンドとバックエンドに分かれていて、技術環境構築法がそれぞれ記述されています。
フローもマーメイドによってシーケンスとして出力されていることがわかります。
そして最後に、ロジックの部分も各セクションのコードとしてしっかり出力されています。
ここから自分でメモを加えたり、カーソルに生成してもらうことで、より良いアウトプットができるのかなと思っています。
今回はリポジトリを対象にしましたが、ウェブ上のコンテンツなら何でもまとめノートとしてアウトプットできると思うので、ぜひお試しいただけたらと思います。
これ以外にも、今回紹介できないのですが、ObsidianからMarkdownでスライドを作成するツールであるSlidevがあります。これを組み合わせることで、Obsidianのメモを簡単にスライドとして出力できます。
他にも、忘却曲線に基づいたフラッシュカードアプリであるAnkiがありますが、これをObsidianと組み合わせることで、Obsidianのメモの任意の単語をAnkiのフラッシュカードとして出力することができます。
一番言いたいことは、Obsidianはローカルファーストであるということです。ローカルにファイルがあるからこそ、他のツールとの連携が簡単になります。
ぜひ皆さんにも、さまざまなアウトプットを試していただきたいです。
最後に結論ですが、メモ管理とAIツールの相性は非常に良いです。
ObsidianとCursorでタグ管理とアウトプットを行い、生産性を向上させましょう。
ご清聴ありがとうございました。
はい。
山口さんの発表、ありがとうございました。
それでは、次のセクションに進みたいと思います。
画面は見えますか？
はい、あります。
続いては、「カーソルPRエージェントを使った開発」と題して、弊社AIオペレーション室の岡部俊樹さんにご発表いただきます。よろしくお願いいたします。
ええ、それでは。サイバーエージェントの岡部が、お話させていただこうと思います。
軽く自己紹介させていただくと、去年の8月まで、まあ、去年の8月にサイバーエージェントに入社しまして。それ以来、ずっと...。
ええ、このAIオペレーション室で、先ほどご紹介いただいたイーさんと一緒に、AIを使った...。
AIガスなどのツールを使ったり、社内コンサルティングを行っています。
そのような仕事をさせていただいています。特に、先ほど話し合った通り、ノーコードのAI開発プラットフォームであるDefyに関わっています。
LLMを使ったアプリケーション開発ができるオープンソースソフトウェアがあり、それを活用しています。
業務効率化のための社内コンサルティングと、そのオープンソースソフトウェアのカスタマイズ開発を行っています。
社内の要件に合わせたカスタマイズ開発を行っています。
はい。えっと、特にこのディファイですね。
サイバーエージェントでこのディファイを展開することによって、今は非常に急速に進んでいます。
業務のAIエージェントがドライブしているということです。
4ヶ月前にこの取り組みを始めたのですが、すでに社内で100チーム以上、900名以上が利用しています。
この状況で、月間2万回以上のLLM APIコールが行われています。
実業務の効率化の成果として、ビジネス職の方自身がリファインを行っています。
AIエージェントのアプリケーションを開発しています。大きなケースでは、1件で1000時間分の業務効率化を実現することもあります。
さらに、この取り組み自体もdefyのカスタマイズを行っており、まさにイーさんと私の2人でやっています。
社内でコンサルティングを行いながら、集めた要件を素早く取り入れ、適合した仕様に変えて広めています。今回お話しする開発は、defyというOSSと開発用のAIエージェントに関するものです。
これらのツールを駆使して、最速で開発を進めています。エージェントをどのように活用したかについてお話しします。
しかし、AIエージェントの開発ツールを使う際には、先ほどもお話しした通り、毎日のように新しいツールが無数に現れるため、選定自体が難しいです。
どれを選べばいいのか分からないという方も多いと思います。
そして、その時に私たちがやりたかったのはこの「ディファイン」です。
コンサルティングとカスタマイズ開発ということだったので、エージェント開発を最も効率的に取り入れるにはどうしたらいいかを少し考えました。結論を言うと、少し保守的に考えて、ドーラステートに焦点を当てました。
「オブデイボックス」と言います。
それはグーグルですよね？今もグーグルが管理しているのでしょうか。
まあ、研究機関のようなところがあって、フォーキーズなどを開発生産性の指標として使っています。
よく聞かれる方はたくさんいらっしゃると思いますが、あそこは毎年開発生産性に関するレポートを出しています。特に昨年、一昨年くらいからAIや生成AIの開発への適用が非常に注目されているので、その点についてもレポートが出ています。
ツールの発信やそれから始めるのではなくて。
つまり、AIがどのように活用されているのかというレポートを先に見て、そこから逆算してツールを選ぶという発想を取ったということですね。はい、そういうことです。では、実際に2024年のレポートには何が書かれていたのでしょうか？
これを見ると、注目すべきところはAIを導入することで向上しやすい開発成果だと思います。ここが少し小さくなっているんですが。
やっぱり、昨年の段階では、あの。
成果が大きいのは、このドキュメントの品質が向上するという部分です。
そういうところですね。
次にコード品質の向上があります。
それから、コードレビューですね。ドキュメントの品質向上に関連していると思いますが、コードレビューのスピードも上がるということがあります。
そういうことですね。この右の三つの丸がそれを表しています。この三つは一種の飛躍ですが、一方で...。
複雑さの低下や技術負債の削減にはあまり効果がなかったという状況ですね。こういった点を踏まえてツールを選定する際には、ドキュメント品質、コード品質、コードレビューが上位の三つになります。
レビュー速度のような点に合わせたツールを考えるときに、何度も紹介されているツールですが、この文脈から考えてみると...。
カーソルのようなものだと、AIが生成するコードの部分は品質が高いことが多いので、そういったことに役立ちます。
また、PRエージェントというツールを使うと...。
プルリクエストから変更内容の概要を取得できます。
仕様を作成したり、他のこともできたりするので、比較的役立ちます。
また、vゼロは要件定義にも使えます。
はい。
え？何？
このPRエージェントはオープンソースソフトウェア（OSS）です。
CS。
どうしたの？
まあ、あのAIについてですね。
そのプルリクエストに対する実装説明によって、レビューが効率化されます。
そこに特化しています。さっきお話した通りです。
ドキュメンテーションのクオリティを上げるというところです。
それは、似たような領域にフォーカスしているツールで、エントリーレベルのレビューを助けるものです。
レビューの指摘をAIに任せると、過去には誤った指摘が出ることが多かったんですが、ドキュメンテーションに絞っているため、ほとんどミスなく使えるというのが大きな所感ですね。
はい、これがGitHub Actionsで提供されているので、自由に素早く使うことができます。
それが予算の面なのかなと思います。はい。
それらは避けるべきです。
Vゼロですね。
これもよく話題に上がると思いますが、予見定位から動くUIドキュメントにそのまま転換できるということです。ここに書かれていること、あそこに書かれていること。
というか、まあ、そうですね。
まあ、できるんですよね。先ほど言ったように、二人しかいない状況でスピード感を持って進めようとする時に、そのPDMとかPPMが役立つんです。手動で設計できるデザイナーがいなくても、最低限以上のUIデザインが作れるんです。
あの、例えば、まあこれ。
僕が作っているようなものなんですけど、まあ。
こういうところに、あの、なんて言うんでしょう？
社内ツールって、やっぱりB2B SaaSに近いところがあって、使いやすさを最優先に考えることが多いと思うんですけど、AIを使えばそういうところにちゃんと配慮したものが作れますし。
例えば、この20先十原則っていうのはユーザビリティのフレームワークみたいなものなんですけど、その言葉を知っているだけで、それをプロンプトで指示すれば、その方向性で進められます。
その方向性に配慮されたUIを生成できるということがあります。
つまり、より強力になるということですね。はい。
そして、社内ツールなので、ステークホルダーに直接そのUIを見せることができます。
デモが行えるという点は強みになるでしょうね。
そういうことになります。はい。
時間が5分しかないので、さらっと終わらせますね。えっと、このようにですね。
AI開発エージェントの選定にかかるコストとリスクを最小化し、効率的に行います。
ツールを適用することで、この形で実現できたということですね。それで、えっと。
前回のState of DevOps 2024は昨年の2月に公開されたもので、ちょうど今が2025年の2月ですね。
この一年間でAI啓発ツールが飛躍的に進化しました。それに合わせて、どのような分野で成果が出ているのかが発表されると思います。それを踏まえて、さらなる導入を進めていければいいかなと思います。はい、以上です。
上です。
岡部さん、ありがとうございました。それでは、続きの発表に参ります。
続いては、「キーエンジニアが分析補助のためにカーソルを使ってみた」と題して、株式会社サイバーエースTM本部マーケティングアカウントデザイン局の宇佐美亮司さんにご発表いただきます。
それでは、よろしくお願いします。
それでは、これを始めましょう。
えっと。
本日、多分エンジニアの方がメインだと思うんですけど、多分唯一私が非エンジニアで登壇します。
ということで、題名を「非エンジニアが分析補助のためにカーソルを作ってみた」といった感じにして、LTしたいと思っています。
基本的にちょっと私、あがり症なので、スライドの内容はカジュアルになっています。ご了承ください。
結論から述べますが、非エンジニアでも分析の補助ができます。
カーソルを使ってみたんですが、使ってみたらですね。
分析の幅が広がり、ビジネス職としての怠慢にも気づきました。そういった話を今回持ってきました。
なので今日、おそらくカーソルと言えばウィンドサーフと言えばという方々が集まっていると思います。
基本的には技術要件のところです。技術の部分ですね。
どなたかが話されるかなと思ったので、私が伝えたいのはこの一部のみです。
特に非エンジニアの方には、すぐにカーソルを使ってくださいという話ですね。
まあ、自己紹介なんですけれども。私は現在、サイバーエージェントの子会社である株式会社サイバーエースで、メイン広告運用コンサルタントとして働いています。広告のパフォーマンスを上げる仕事をしています。基本的にはサイバーエージェントはビジネス、えっと、エンジニアリングに注力しています。
クリエイターには3種類いるんですけども、私はビジネス職に該当します。
もともとですね。
私は陸上自衛隊におりました。すごい経験でした。
アナログチックな環境で生活していました。
でも今は、生成AIにどっぷりハマっています。
業務効率化を生成AIでどう実現するか、というところで仕事をしています。
広告運用と言っても分かりづらいと思うので、何をしているのか説明します。基本的にはGoogle EarthとYahooを使っています。
広告のパフォーマンスを分析して改善しています。
基盤については、GoogleのBigQueryやBIツールのTableauを使用しています。
LookerではなくLooker Studioを使っていて、Google Analyticsも利用しています。基本的にはキーワードやクエリの分析、そしてRFM分析を行っています。
私の主な業務は、インドなどでの決定木分析のような手法を用いた分析です。
もともとですね。
以前はどのように広告分析を行っていたかというと、どの広告が当たっているかをすぐに特定し、そのクリエイティブな要素、例えば動画や適応性を手動で確認し、カテゴリー分けしていました。
かなり属人的にやっていました。
それが今までの流れです。
Pythonを使ってAirCodeを開発することで、人力では困難な複雑な形態を扱えるようになりました。
素解析や動画解析の分野で進展がありました。
最初はChatGPTとJupyterから始めたのですが、CursorやWindsurfのようなツールが登場し、誰でも使えるようになりました。
依頼を投げれば何でもしてくれるようになってきました。ここで重要なのは、先ほど山崎さんがおっしゃっていたように、どれだけ失敗できるかという点です。耐え続けることは非エンジニアにはない部分なので、ここに注意が必要です。
100回でも200回でも失敗し続けることで、徐々に成長していきます。
これによって業務の解像度が上がっていくのが、私の今の視座です。
ちなみに、書いたけど何を言っているのかわからないという非エンジニアの方もいると思いますが、カーソルを使って、マークダウン形式のようなマーメイドに変換することができます。
これはマークダウンプレビュー、具体的にはマーメイドサポート機能です。
これを使うと、右側にアプリケーションのフローをすぐに表示できるので、どこを修正すればいいかがわかりやすくなります。
こういったツールを使って、どんどん失敗を重ねて学んでいくことができます。
非エンジニアでもこれができます。
分析を拡張していくことが非常に重要であり、今回伝えたいのはその点です。
はい、それでカーソルを使ってみて、自分でコードを書いてみて気づいたことがあります。
まあ、実際には私が書いたわけではなく、AIが書いてくれたんですけど、書いてみて初めて業務の言語化がもっと必要だと痛感しました。
多分そう思っているという話を書いているんですけど、AIオペレーション室にいろいろ開発をお願いしていて、前のようにうまくやってくれました。
ビジネスでは「これどうすればいいの？」とか「いい感じにして」と言いがちですが、「いい感じ」が何を意味するのかはっきりしないことが多いです。フィードバックをもらって初めて理解が進むんですよね。
「いい感じって何？」と考え始めるんですが、開発が絡むとそのループが遅くなってしまうんです。
自分でやると「いい感じ」が明確に定義された状態でエンジニアに渡せるので、その点では非常に良いです。貴重な知見が得られたと思っています。
この「いい感じ」を言語化することが、これからAIがAIファーストになっていく中でのビジネス職の役割なんだろうなと痛感しています。
そういう状況になっています。
技術選定や手法に口を出すと、基本的にはエンジニアの方が詳しいので、そこに口を出すのではなく、あくまでビジネスの解像度をどう上げていくかということです。
今後のAI社会において、これが重要になってくるのかなと思っています。
先ほどの結論に戻りますが、非エンジニアが分析のためにカーソルを使ってみたところ、分析の幅が広がり、ビジネス職としての怠慢にも気づいたという話です。
カーソルを使ってモップを作ってみることによって、あるいはカーソルでモップを作ってみることによって...。
「なんかいい感じ」というのがより言語化しやすくなるので、非エンジニアの方には、カーソルやウィンドサーフを一度触ってみていただきたいです。
それが本日の本題になります。
ご静聴ありがとうございました。
ありがとうございました。
兵士。
それでは。
続いてのセッションです。ええ、英語でのご発表になります。
冒頭でご案内した通訳サービスをご利用ください。ええ、Naxa shuno will。
英語で発表されます。
リアルタイムAI翻訳サービスをご利用ください。
ありがとうございます。
それでは。
「AIで実現する高速開発プロダクション対応ウェブとモバイルアプリの構想」というテーマで、え？
コードジャイアント社のCEOであり創業者であるリシマスウル様にお話しいただきたいと思います。
わかりました。
準備ができたら始めてください。
よし、それでは始めましょう。
みなさん、こんにちは。お元気ですか？
少し遅れているので、手短に済ませますね。
私が話すのが速すぎる場合は、このアプリを使ってください。
このアプリが皆さんの助けになるといいですね。
さて、Codegiantについてです。私はCodegiantの創設者兼CEOです。
私たちの使命は、高性能アプリケーション向けに実用レベルのAI開発者を育成することです。
私の経歴について少しお話しします。ソフトウェア開発を約25年間行ってきました。
難しい問題を解決するのが大好きです。
私はシリコンバレー出身の連続起業家です。いくつかのスタートアップを立ち上げてきましたが、成功したものもあれば、失敗したものもあります。
だから、スタートアップを立ち上げるのが大好きです。
それで、Codegiantとは何ですか？
Codegiantは、基本的にAI開発者の機能をインフラに追加するプラットフォームです。
これが非常に重要なのは、CloudflareやAWS、その他のシステムにデプロイできることです。既存のツールの多くは、先ほど紹介したもののように、インフラをブラックボックス化しており、プロトタイピングには非常に適しています。
でも、本当に目指しているのは...。
私たちのAI開発者は、実用レベルの精度を提供できます。
これを実現できるのは、過去7年間をかけて開発者向けのツールチェーン全体を構築してきたからです。
観測性からエラートラッキング、Git、稼働時間の監視、ステータスページまで、すべてのツールが私たちのプラットフォームに含まれています。
GitHubに行く必要はありません。
Pingdomに行く必要はありません。
たくさんの異なるツールを買う必要はありません。これにより、すべてにおいてコンテキストと正確性を維持できます。
そうですね。現在のフレームワークにおけるAIエージェントを見ると、さまざまなツールに接続し、すべてのコンテキストを把握する必要があります。
それは精度に影響を与え、プロダクションレベルのAI開発を達成するのを非常に困難にします。
これが私たちの統合されたツールチェーンです。
イシュートラッカーがあります。
リポジトリ、CI/CDコードポッドがあり、GitHub CodespacesのようなものとAPMトレーシングがあります。
Sentryのようなツールを使ったことがあるなら、同じものを提供しています。
オブザーバビリティ。DatadogやSplunkのようなツールを使ったことがあるなら、私たちも同様のものを提供しています。稼働時間、ステータスページ、ドキュメントなど、Confluenceのようなものです。
Getbook、Pingdom、Statuspage.ioなど、あなたが知っているかもしれないさまざまなツールです。
すべてが一か所にまとまっています。
このように、開発者ツールチェーン全体をモジュラーシステムに統合することで、あらゆるインフラに接続し、AI開発者の機能を提供できます。今回は、CogentとCloudflareの連携をお見せします。
では、まず製品を簡単にお見せします。製品内には、イシュートラッカーやリポジトリなど、すべてが揃っています。
ドキュメントもすべて組み込まれています。すべて揃っています。
稼働時間の監視やステータスページもあり、これらを公開できます。
公開ステータスページを作成でき、エラーやAPMトレースも提供しています。
ここにもすべて統合されています。
はい、観測性とログ機能も提供しています。
これがプラットフォームの開発者ツール部分の外観です。そして、Codegiant内のAIに質問することができます。
何かを作りたいです。
何を作るか、さっと見てみましょう。
QRコード付きのイベント登録ページを作成して、人々がそれをスキャンできるようにしたいです。
うーん、ライブでシステムに入力されるようにしたいです。
私たちのプラットフォームには、GitHub Codespacesに似たGitHubコードも組み込まれています。
ここに来て、エンターキーを押すだけです。
それでビルドが始まります。
すべての連絡先を集め、エラーを追跡し、時間を節約するために今すぐアプリケーションの構築を開始します。スケジュールが少し遅れているので。
何が作成されたかお見せしますね。
数分前に座っているときにこれをやりました。
それで？
基本的に、私が作るように頼んだのと同じ質問を作成しました。
データベース層からキャッシュまで、このアプリケーションのすべての側面を網羅して構築しました。
自動トリアージも自己修正しました。ご覧の通り、すべてを処理しています。
そして、コードベース全体を自動的に適用し、Cloudflare Edgeにデプロイされた完全に機能するアプリケーションを提供してくれました。D1データベースで完全にスケーラブルです。
ベクトル化と認証を使用しています。
すべてが組み込まれています。
登録ページまで作成してくれました。
これをリアルタイムでスキャンすれば、登録できるはずです。そして、あなたの情報を私のために作成されたライブダッシュボードに取り込むことができるはずです。
これが作成されたものです。LovableやBoltは素晴らしいプロトタイピングツールですが、通常のワークフローはLovableやBoltでプロトタイプを作成してから次のステップに進むというものです。
または、他のツールを使ってプロトタイプを修正するんですよね？
Codegiantはそれらすべてをスキップします。
最初からCloudflareにデプロイされたプロダクションレベルのアプリケーションを提供し、数百万のユーザーにスケールできます。
だから、もう手動で全てを接続するプロセスを経る必要はありません。
Codegiantがすべてを処理します。
誰かが実際に登録しているか確認してみます。
今、登録を受け付けています。ほら、できました。
前回のプレゼン中に座ってこれを作りました。
わかりました。
さて、Codegiantのもう一つの素晴らしい点は、デプロイを決定したときです。
アプリケーションをCloudflareにデプロイしたいとき、Codegiantが自動的に多くのことを構築してくれます。
それはどういう意味かというと？
アプリケーションを持っていると、ドキュメント、APIドキュメント、ステータスページ、そしてさまざまな開発者ツールを設定する必要があります。
Codegiantがそれを自動的に処理してくれます。
アプリケーションをデプロイするときに、AIにビルドを指示するだけで、Codegiantが自動的にステータスページを公開し、APIドキュメントを作成してくれます。ちょっとお見せしますね。
そして、それを自動的に公開して、顧客が見られるようにします。
これまで時間をかけていたSentryの設定、ログの設定、APIドキュメントの作成、ステータスページの設定などの細かい作業は、AIを使ってアプリケーションを構築するのと同時に、Codegiantが自動的にすべて設定してくれます。
もう開発者ツールも設定も必要ありません。
すべてが一度に処理されます。
つまり、私たちは基本的に...。
Boltの魅力的なカーソルと他の開発者ツールがすべて一箇所に集まり、ワンクリックで利用できます。この方法で、正確なAIのプロダクションレベルの開発が実現できると信じています。
これにより、デプロイされたアプリケーションを自動でトリアージし、修正することができます。エラーが発生したときやログの量が多いときに検知できます。
開発者ツールチェーン全体から情報を得ているので、問題があれば...。
REIが自動的にアプリケーションを修正できます。
そして、ほとんど手間をかけずに再デプロイできます。
えっと、質問があれば喜んでお答えします。
えっと、そうですね、それについてはもう説明しました。
すべてを自動的にデプロイします。
現在、CloudflareとAWSでAIエンジニアをサポートしています。
モバイルアプリのサポートがもうすぐ登場します。数週間以内にモバイルエンジニアもリリースする予定です。
どんな問題を解決しているのですか？
Codegiantはプロトタイプの構築ワークフローを効率的かつ革新的にします。
その後、Codegiantで洗練することで、最初のプロンプトから数千人のユーザーにスケールできる本番環境対応の結果を生み出します。
もう開発者ツールは必要ありません。
もうこれらの異なるツールをすべて設定する必要はありません。
すべてを同じワークフローに統合します。
CodegiantはSOC 2 Type 2に準拠しています。
私たちはGDPRにも準拠しています。
私たちのプラットフォームを利用しているチームは数千あります。
私たちは米国のFortune 200企業に導入しています。また、スタートアップエコシステムや個人開発者もサポートしています。
アクセスコードが欲しい方がいれば、喜んでお渡しします。
これは最近の会議の話で、今週の初めか先週だったと思いますが、フィリピン政府に導入する予定です。
これは私が教育長官と会っているところで、Cloudflareのイノベーション部門の責任者と一緒にいます。
彼は私の右側に座っています。このユースケースに対する私たちのソリューションは、教育省が開発者なしで製品を構築できるようにします。
1人で20人から30人分の仕事ができます。
ですので、一般公開版に早期アクセスしたい場合は、Discordにサインアップしてください。チームの誰かが早期アクセスを提供します。それがすべてです。
本当にありがとうございます。
これからネットワーキングイベントがありますね。質問があれば、そこで喜んでお答えします。ありがとうございます。
確認していただきありがとうございます。
こんにちは。
今、画面が見えますか？はい、それでは...。
本日のLTセッションは以上で終了となります。
登壇された皆様、貴重なお話をありがとうございました。
繰り返しになりますが、本日は登壇者の皆様にたっぷりとお話しいただきました。
ご質問等があれば...。
Xで。
受け付けております。
Cuckoo
AI interpreter for global teams

